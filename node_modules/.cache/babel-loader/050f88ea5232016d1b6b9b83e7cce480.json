{"remainingRequest":"/Users/biyue/Documents/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/biyue/Documents/LanHuo-biyue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/biyue/Documents/LanHuo-biyue/src/views/nested/fenceCreate/fenceOutCreate/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/biyue/Documents/LanHuo-biyue/src/views/nested/fenceCreate/fenceOutCreate/index.vue","mtime":1557804194686},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _Object$defineProperty = require(\"/Users/biyue/Documents/LanHuo-biyue/node_modules/@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nrequire(\"@/static/font/css/font-awesome.css\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import '../../static/css/gateMana/common.css'\n// import '../../static/css/gateMana/dianziweilan.css'\n// import BMap from 'BMap'\n// import BMapLib from 'BMapLib'\n// import BMapSymbolSHAPEPOINT from 'BMap_Symbol_SHAPE_POINT'\nvar _default = {\n  data: function data() {\n    return {\n      polygonPath: [{\n        lng: 116.411689,\n        lat: 39.914059\n      }, {\n        lng: 116.403641,\n        lat: 39.914059\n      }, {\n        lng: 116.403641,\n        lat: 39.921336\n      }, {\n        lng: 116.411689,\n        lat: 39.921336\n      }],\n      para: [],\n      circleShow: false,\n      polygonShow: false,\n      pointShow: false,\n      fenceShape: [],\n      circlePath: {\n        center: {\n          lng: 116.404,\n          lat: 39.915\n        },\n        radius: 500\n      }\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    this.tableWidth = document.body.scrollWidth - 259 - 20; // this.baiduMap()\n  },\n  methods: {\n    /** ********************************* 页面处理数据格式等函数 ************************************************ */\n    fenceCreate: function fenceCreate() {\n      this.sendPath();\n      this.$router.push({\n        name: 'fenceCreateInfo',\n        // path: '/fenceCreateInfo',\n        params: {\n          shape: this.para\n        }\n      });\n    },\n    updatePolygonPath: function updatePolygonPath(e) {\n      this.polygonPath = e.target.getPath();\n    },\n    updateCirclePath: function updateCirclePath(e) {\n      // console.log('target center:' + e.target.getCenter())\n      // console.log('target radius:' + e.target.getRadius())\n      this.circlePath.center = e.target.getCenter();\n      this.circlePath.radius = e.target.getRadius();\n      console.log('fenceShape[0] is:' + this.fenceShape[0]);\n      console.log('Now new circlePath center lng is:' + this.circlePath.center.lng);\n      console.log('Now new circlePath center lnt is:' + this.circlePath.center.lat);\n      console.log('Now new circlePath radius is:' + this.circlePath.radius);\n    },\n    draw: function draw(type) {\n      if (type === 'circle') {\n        this.circleShow = true;\n        console.log('Now circleShow is true');\n        this.polygonShow = false;\n\n        if (this.pointShow === true) {\n          this.circlePath.center.lng = this.fenceShape[0];\n          this.circlePath.center.lat = this.fenceShape[1];\n          this.pointShow = false;\n          this.fenceShape = [];\n        }\n      } else if (type === 'polygon') {\n        this.polygonShow = true;\n        this.circleShow = false;\n\n        if (this.pointShow === true) {\n          this.polygonPath[0].lng = this.fenceShape[0] + 0.008;\n          this.polygonPath[0].lat = this.fenceShape[1] - 0.006;\n          this.polygonPath[1].lng = this.fenceShape[0] - 0.008;\n          this.polygonPath[1].lat = this.fenceShape[1] - 0.006;\n          this.polygonPath[2].lng = this.fenceShape[0] - 0.008;\n          this.polygonPath[2].lat = this.fenceShape[1] + 0.006;\n          this.polygonPath[3].lng = this.fenceShape[0] + 0.008;\n          this.polygonPath[3].lat = this.fenceShape[1] + 0.006;\n          this.pointShow = false;\n          this.fenceShape = [];\n        }\n\n        this.pointShow = false;\n        this.fenceShape = [];\n      } else if (type === 'point') {\n        this.pointShow = true;\n      } else {\n        this.circleShow = false;\n        this.polygonShow = false;\n        this.pointShow = false;\n        this.fenceShape = [];\n      }\n    },\n    selectPoint: function selectPoint(e) {\n      if (this.pointShow === true) {\n        this.fenceShape.push(e.point.lng);\n        this.fenceShape.push(e.point.lat); // this.pointShow = false\n        // this.circlePath.center = e.target\n      }\n\n      console.log('fenceShape is:' + this.fenceShape);\n      console.log('circlePath1=' + this.circlePath);\n    },\n    sendPath: function sendPath() {\n      if (this.circleShow === true) {// if (this.circlePath !== null) {\n        //   para.push({\n        //     Longitude: this.circlePath.center.lng,\n        //     Latitude: this.circlePath.center.lat,\n        //     Radius: this.circlePath.radius\n        //   })\n        //   console.log('circlePath2=' + this.circlePath)\n        // }\n      }\n\n      this.para.Longitude = this.circlePath.center.lng;\n      this.para.Latitude = this.circlePath.center.lat;\n      this.para.Radius = this.circlePath.radius;\n      console.log('Para is:' + this.para.Longitude);\n    }\n  }\n};\nexports.default = _default;",null]}