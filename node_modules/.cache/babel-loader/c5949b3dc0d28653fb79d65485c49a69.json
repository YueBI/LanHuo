{"remainingRequest":"/Users/biyue/Documents/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/biyue/Documents/LanHuo-biyue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/biyue/Documents/LanHuo-biyue/src/views/nested/fenceCreate/fenceCreateInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/biyue/Documents/LanHuo-biyue/src/views/nested/fenceCreate/fenceCreateInfo.vue","mtime":1557731454663},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/biyue/Documents/LanHuo-biyue/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"/Users/biyue/Documents/LanHuo-biyue/node_modules/@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _parseInt2 = _interopRequireDefault(require(\"/Users/biyue/Documents/LanHuo-biyue/node_modules/@babel/runtime-corejs2/core-js/parse-int\"));\n\nvar _api = _interopRequireDefault(require(\"@/api/hardware/api.js\"));\n\nvar _api2 = _interopRequireDefault(require(\"@/api/userAbout/api.js\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import '../../static/css/gateMana/common.css'\n// import '../../static/css/gateMana/dianziweilan.css'\nvar _default = {\n  created: function created() {\n    this.points = this.$route.params.shape;\n    this.groupRemoteMethod();\n    this.conditionRemoteMethod();\n    this.adminRemoteMethod();\n    console.log('经纬度：');\n    console.log(this.points);\n  },\n  data: function data() {\n    return {\n      testData: [],\n      addForm: {\n        fenceName: '',\n        fenceDes: '',\n        groupName: '',\n        groupId: '',\n        conditionId: '',\n        conditionName: '',\n        alarmId: '',\n        alarmName: '',\n        workTime: [],\n        attendanceAdmin: []\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      loadingText: '正在拼命加载中，请稍等......]',\n      loading: false,\n      paginationVisible: true,\n      // 表格下方的分页显示\n      formLabelWidth: '150px',\n      list: [],\n      states: [],\n      points: [],\n      adminList: [''],\n      alarmList: [''],\n      conditionList: [''],\n      conditionPara: [],\n      alarmPara: [],\n      workTimeList: [''],\n      groupOptions: [],\n      fenceOptions: [],\n      adminOptions: [],\n      conditionOptions: [],\n      alarmOptions: [],\n      fileList: [],\n      multipleSelection: [],\n      withCredentials: true,\n      processing: false,\n      uploadTip: '点击上传',\n      importFlag: 1,\n      addVisable: false,\n      editVisable: false,\n      dialogImportVisible: false,\n      errorResults: []\n    };\n  },\n  methods: {\n    /** ********************************* 页面处理数据格式等函数 ************************************************ */\n    // 重置表单\n    resetError: function resetError(formName) {\n      this.$nextTick(function () {\n        this.$refs[formName].resetFields();\n      });\n    },\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      this.$nextTick(function () {\n        this.$refs[formName].resetFields();\n      });\n    },\n    // 将时间转化为字符串(filterForm)\n    formatDayFro: function formatDayFro(now) {\n      var year = now.getFullYear();\n      var month = now.getMonth() + 1;\n      month = month < 10 ? '0' + month : month;\n      var date = now.getDate();\n      date = date < 10 ? '0' + date : date;\n      var hour = now.getHours();\n      hour = hour < 10 ? '0' + hour : hour;\n      var minute = now.getMinutes();\n      minute = minute < 10 ? '0' + minute : minute;\n      var second = now.getSeconds();\n      second = second < 10 ? '0' + second : second;\n      return year + '-' + month + '-' + date + ' ' + hour + ':' + minute + ':' + second;\n    },\n    // 将时间转化为字符串(filterForm)\n    formatDateFro: function formatDateFro(now) {\n      var year = now.getFullYear();\n      var month = now.getMonth() + 1;\n      month = month < 10 ? '0' + month : month;\n      var date = now.getDate();\n      date = date < 10 ? '0' + date : date;\n      return year + '-' + month + '-' + date;\n    },\n    // 将时间转化为字符串(filterForm)\n    formatTimeFro: function formatTimeFro(now) {\n      var hour = now.getHours();\n      hour = hour < 10 ? '0' + hour : hour;\n      var minute = now.getMinutes();\n      minute = minute < 10 ? '0' + minute : minute;\n      var second = now.getSeconds();\n      second = second < 10 ? '0' + second : second;\n      return hour + ':' + minute + ':' + second;\n    },\n    // 增加电子签到信息，点击“保存”\n    submitAdd: function submitAdd() {\n      var _this = this;\n\n      this.$refs['addForm'].validate(function (valid) {\n        if (valid) {\n          // console.log(this.workTimeList[0][0])\n          _this.addFenceFro();\n        } else {\n          return false;\n        }\n      });\n    },\n    add: function add() {\n      var obj = '';\n      this.adminList.push(obj);\n    },\n    delet: function delet(index) {\n      this.adminList.splice(index, 1);\n    },\n    addTime: function addTime() {\n      var obj1 = '';\n      this.workTimeList.push(obj1);\n      var obj2 = '';\n      this.alarmList.push(obj2);\n      var obj3 = '';\n      this.conditionList.push(obj3);\n    },\n    deletTime: function deletTime(index) {\n      this.workTimeList.splice(index, 1);\n      this.alarmList.splice(index, 1);\n      this.conditionList.splice(index, 1);\n    },\n\n    /** ***************************** 向后台发送请求 ***************************************** */\n    // 下拉列表,已存在的用户组\n    groupRemoteMethod: function groupRemoteMethod(query) {\n      var _this2 = this;\n\n      if (query !== '') {\n        _api2.default.getAllUserGroup({}).then(function (res) {\n          if (res.data.result === 1000) {\n            var data = res.data.content;\n\n            if (data.list.length > 0) {\n              _this2.groupOptions = data.list;\n            }\n          }\n        });\n      }\n    },\n    // 管理员下拉列表\n    adminRemoteMethod: function adminRemoteMethod(query) {\n      var _this3 = this;\n\n      if (query !== '') {\n        _api2.default.getAllAdmin({}).then(function (res) {\n          if (res.data.result === 1000) {\n            var data = res.data.content;\n\n            if (data.list.length > 0) {\n              _this3.adminOptions = data.list;\n            }\n          }\n        });\n      }\n    },\n    // 触发条件下拉列表\n    conditionRemoteMethod: function conditionRemoteMethod(query) {\n      var _this4 = this;\n\n      if (query !== '') {\n        _api.default.getAllCondition({}).then(function (res) {\n          if (res.result === 1000) {\n            console.log('response is 1000');\n            var data = res.content;\n\n            if (data.list.length > 0) {\n              _this4.conditionOptions = data.list;\n              console.log('conditionOptions is:' + _this4.conditionOptions);\n            }\n          }\n        });\n      }\n    },\n    // 创建电子围栏\n    addFenceFro: function addFenceFro() {\n      var _this5 = this;\n\n      var para = {\n        fenceName: this.addForm.fenceName,\n        groupName: '1',\n        // groupName: this.addForm.groupName,\n        fenceDes: this.addForm.fenceDes,\n        groupId: '',\n        alarms: [],\n        // adminId: parseInt(sessionStorage.getItem('adminId')),\n        // adminName: sessionStorage.getItem('adminName'),\n        adminId: (0, _parseInt2.default)('1'),\n        adminName: 'admin',\n        admins: [],\n        buildId: '',\n        buildName: '',\n        mapName: '',\n        floor: '',\n        points: this.points\n      };\n\n      for (var i = 0; i < this.groupOptions.length; i++) {\n        if (this.addForm.groupName === this.groupOptions[i].groupName) {\n          para.groupId = (0, _parseInt2.default)(this.groupOptions[i].groupId);\n          break;\n        }\n      } // for (let i = 0; i < this.alarmList.length; i++) {\n      //   for (let j = 0; i < this.alarmOptions.length; j++) {\n      //     if (this.alarmList[i] === this.alarmOptions[j].alarmName) {\n      //       this.alarmPara.push({\n      //         alarmId: this.alarmOptions[j].alarmId,\n      //         alarmName: this.alarmOptions[j].alarmName\n      //       })\n      //       break\n      //     }\n      //   }\n\n\n      for (var _i = 0; _i < this.alarmList.length; _i++) {\n        this.alarmPara.push({\n          alarmId: (0, _parseInt2.default)('1'),\n          alarmName: 'alarmName'\n        });\n      }\n\n      for (var _i2 = 0; _i2 < this.conditionList.length; _i2++) {\n        this.conditionPara.push({\n          conditionId: (0, _parseInt2.default)('1'),\n          conditionName: 'conditionName'\n        });\n      } // for (let j = 0; i < this.conditionOptions.length; j++) {\n      //   if (this.conditionList[i] === this.conditionOptions[j].conditionName) {\n      //     this.conditionPara.push({\n      //       conditionId: this.conditionOptions[j].conditionId,\n      //       conditionName: this.conditionOptions[j].conditionName\n      //     })\n      //     break\n      //   }\n      // }\n      // for (let i = 0; i < this.fenceOptions.length; i++) {\n      //   if (this.addForm.fenceName === this.fenceOptions[i].fenceName) {\n      //     para.fenceId = parseInt(this.fenceOptions[i].fenceId)\n      //     break\n      //   }\n      // }\n\n\n      if (this.workTimeList && this.workTimeList.length > 0) {\n        for (var _i3 = 0; _i3 < this.workTimeList.length; _i3++) {\n          para.alarms.push({\n            startDate: this.formatDateFro(this.workTimeList[_i3][0]),\n            endDate: this.formatDateFro(this.workTimeList[_i3][1]),\n            startTime: this.formatTimeFro(this.workTimeList[_i3][0]),\n            endTime: this.formatTimeFro(this.workTimeList[_i3][1]),\n            alarmId: (0, _parseInt2.default)(this.alarmPara[_i3].alarmId),\n            alarmName: this.alarmPara[_i3].alarmName,\n            conditionId: (0, _parseInt2.default)(this.conditionPara[_i3].conditionId),\n            conditionName: this.conditionPara[_i3].conditionName\n          });\n        }\n      }\n\n      if (this.adminList && this.adminList.length > 0) {\n        for (var _i4 = 0; _i4 < this.adminList.length; _i4++) {\n          // para.admins.push({adminId: parseInt(this.adminList[i])})\n          para.admins.push((0, _parseInt2.default)('1'));\n        }\n      }\n\n      console.log(para);\n\n      _api.default.addFence(para).then(function (res) {\n        console.log(res);\n\n        if (res.data.result === 1000) {\n          _this5.addVisable = false;\n\n          _this5.$message.success('添加电子围栏信息成功');\n        } else {\n          _this5.$message.error(res.resultDesp);\n        }\n      }).catch(function (error) {\n        _this5.addVisable = false;\n\n        _this5.$message.error(error);\n      });\n    }\n  }\n};\nexports.default = _default;",null]}