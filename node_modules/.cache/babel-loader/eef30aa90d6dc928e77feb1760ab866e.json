{"remainingRequest":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/biyue/Documents/LanHuo/LanHuo-biyue/src/views/wenyu/showTrack.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/src/views/wenyu/showTrack.vue","mtime":1568880951635},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@babel/runtime-corejs2/helpers/objectSpread\"));\n\nvar _vuex = require(\"vuex\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Dashboard',\n  data: function data() {\n    return {\n      trackData: {},\n      times: 0,\n      x_test: 80,\n      y_test: 80,\n      points_list_2: [],\n      points_list_3: [],\n      now: '',\n      trajectoryId: 0,\n      nowpoints: [],\n      markerArr: [],\n      plPoints: []\n    };\n  },\n  computed: (0, _objectSpread2.default)({}, (0, _vuex.mapGetters)(['name'])),\n  mounted: function mounted() {\n    this.mymap();\n    this.hello();\n  },\n  methods: {\n    hello: function hello() {\n      var _this2 = this;\n\n      this.trajectoryId = this.$route.query.trajectoryId; // 获取轨迹信息\n\n      _axios.default.post('http://112.74.189.126:8080/bluefire/Integererface/data_manage/getOutdoorTrajectoryDetail', {\n        'trajectoryId': this.trajectoryId\n      }).then(function (response) {\n        console.log('接收成功');\n        console.log(response.data.content.list[1]);\n        var number1 = 0;\n        _this2.trackData = response.data.content.list;\n        var i = 0;\n\n        for (i in _this2.trackData) {\n          _this2.x_2 = _this2.trackData[i]['latitude'];\n          _this2.y_2 = _this2.trackData[i]['longitude'];\n          _this2.solepoint = _this2.y_2 + '|' + _this2.x_2, _this2.points_list_2.push(_this2.solepoint);\n        }\n\n        for (i in _this2.trackData) {\n          _this2.x_2 = _this2.trackData[i]['latitude'];\n          _this2.y_2 = _this2.trackData[i]['longitude'];\n          _this2.solepoint = _this2.y_2 + '|' + _this2.x_2, _this2.points_list_3.push({\n            title: null,\n            content: null,\n            point: _this2.solepoint,\n            isOpen: 0,\n            icon: {\n              w: 100,\n              h: 21,\n              l: 0,\n              t: 0,\n              x: 6,\n              lb: 5\n            }\n          });\n        }\n\n        _this2.markerArr = _this2.points_list_3;\n        _this2.plPoints = [{\n          style: 'solid',\n          weight: 4,\n          color: '#f00',\n          opacity: 0.6,\n          points: _this2.points_list_2\n        }];\n        _this2.x_1 = _this2.trackData[0]['latitude'];\n        _this2.y_1 = _this2.trackData[0]['longitude'];\n        _this2.nowpoints[0] = {\n          title: null,\n          content: null,\n          point: _this2.y_1 + '|' + _this2.x_1,\n          isOpen: 0,\n          icon: {\n            w: 100,\n            h: 21,\n            l: 0,\n            t: 0,\n            x: 6,\n            lb: 5\n          }\n        };\n      }, function (err) {\n        conslog.log('接收失败');\n      });\n    },\n    showtrack: function showtrack() {\n      this.mymap(); // 创建地图\n\n      this.setMapEvent(); // 设置地图事件\n\n      this.addMapControl(); // 向地图添加控件\n\n      this.addPolyline();\n    },\n    showpoint: function showpoint() {\n      this.mymap(); // 创建地图\n\n      this.setMapEvent(); // 设置地图事件\n\n      this.addMapControl(); // 向地图添加控件\n\n      this.nowpoint();\n    },\n    showplayback: function showplayback() {\n      this.times = 0, this.mymap(); // 创建地图\n\n      this.setMapEvent(); // 设置地图事件\n\n      this.addMapControl(); // 向地图添加控件\n\n      this.playtrack();\n    },\n    mymap: function mymap() {\n      var map = new BMap.Map('myMap'); // 在百度地图容器中创建一个地图\n\n      var point = new BMap.Point(116.395645, 39.937953); // 定义一个中心点坐标\n\n      map.centerAndZoom(point, 12); // 设定地图的中心点和坐标并将地图显示在地图容器中\n\n      window.map = map; // 将map变量存储在全局\n    },\n    setMapEvent: function setMapEvent() {\n      map.enableDragging(); // 启用地图拖拽事件，默认启用(可不写)\n\n      map.enableScrollWheelZoom(); // 启用地图滚轮放大缩小\n\n      map.enableDoubleClickZoom(); // 启用鼠标双击放大，默认启用(可不写)\n\n      map.enableKeyboard(); // 启用键盘上下左右键移动地图\n    },\n    addMapControl: function addMapControl() {\n      // 向地图中添加缩放控件\n      var ctrl_nav = new BMap.NavigationControl({\n        anchor: BMAP_ANCHOR_TOP_LEFT,\n        type: BMAP_NAVIGATION_CONTROL_LARGE\n      });\n      map.addControl(ctrl_nav); // 向地图中添加缩略图控件\n\n      var ctrl_ove = new BMap.OverviewMapControl({\n        anchor: BMAP_ANCHOR_BOTTOM_RIGHT,\n        isOpen: 1\n      });\n      map.addControl(ctrl_ove); // 向地图中添加比例尺控件\n\n      var ctrl_sca = new BMap.ScaleControl({\n        anchor: BMAP_ANCHOR_BOTTOM_LEFT\n      });\n      map.addControl(ctrl_sca);\n    },\n    playtrack: function playtrack() {\n      this.addPolyline();\n      this.addMarker();\n    },\n    addMarker: function addMarker() {\n      if (this.times < this.markerArr.length) {\n        var _this = this;\n\n        this.part(this.times);\n        this.times += 1;\n        setTimeout(_this.addMarker, 500);\n      }\n    },\n    part: function part(i) {\n      var _this = this;\n\n      var json = this.markerArr[i];\n      var p0 = json.point.split('|')[0];\n      var p1 = json.point.split('|')[1];\n      var point = new BMap.Point(p0, p1);\n      map.centerAndZoom(point, 20);\n      var iconImg = this.createIcon(json.icon);\n      var marker = new BMap.Marker(point, {\n        icon: iconImg\n      });\n      var iw = this.createInfoWindow(i);\n      var label = new BMap.Label(json.title, {\n        offset: new BMap.Size(json.icon.lb - json.icon.x + 10, -20)\n      });\n      marker.setLabel(label);\n      map.addOverlay(marker);\n      label.setStyle({\n        borderColor: '#808080',\n        color: '#333',\n        cursor: 'pointer'\n      });\n      var index = i;\n\n      var _iw = _this.createInfoWindow(i);\n\n      var _marker = marker;\n\n      _marker.addEventListener('click', function () {\n        this.openInfoWindow(_iw);\n      });\n\n      _iw.addEventListener('open', function () {\n        _marker.getLabel().hide();\n      });\n\n      _iw.addEventListener('close', function () {\n        _marker.getLabel().show();\n      });\n\n      label.addEventListener('click', function () {\n        _marker.openInfoWindow(_iw);\n      });\n\n      if (json.isOpen) {\n        label.hide();\n\n        _marker.openInfoWindow(_iw);\n      }\n    },\n    nowpoint: function nowpoint() {\n      var _this = this;\n\n      var json = this.nowpoints[0];\n      console.log(json.point);\n      var p0 = json.point.split('|')[0];\n      var p1 = json.point.split('|')[1];\n      console.log(_this, json.point);\n      var point = new BMap.Point(p0, p1);\n      map.centerAndZoom(point, 16);\n      var iconImg = this.createIcon(json.icon);\n      var marker = new BMap.Marker(point, {\n        icon: iconImg\n      });\n      var iw = this.createInfoWindow(0);\n      var label = new BMap.Label(json.title, {\n        offset: new BMap.Size(json.icon.lb - json.icon.x + 10, -20)\n      });\n      marker.setLabel(label);\n      map.addOverlay(marker);\n      label.setStyle({\n        borderColor: '#808080',\n        color: '#333',\n        cursor: 'pointer'\n      });\n      var index = 0;\n\n      var _iw = _this.createInfoWindow(0);\n\n      var _marker = marker;\n\n      _marker.addEventListener('click', function () {\n        this.openInfoWindow(_iw);\n      });\n\n      _iw.addEventListener('open', function () {\n        _marker.getLabel().hide();\n      });\n\n      _iw.addEventListener('close', function () {\n        _marker.getLabel().show();\n      });\n\n      label.addEventListener('click', function () {\n        _marker.openInfoWindow(_iw);\n      });\n\n      if (json.isOpen) {\n        label.hide();\n\n        _marker.openInfoWindow(_iw);\n      }\n    },\n    createInfoWindow: function createInfoWindow(i) {\n      var json = this.markerArr[i];\n      var iw = new BMap.InfoWindow(\"<b class='iw_poi_title' title='\" + json.title + \"'>\" + json.title + \"</b><div class='iw_poi_content'>\" + json.content + '</div>');\n      return iw;\n    },\n    createIcon: function createIcon(json) {\n      var icon = new BMap.Icon('http://developer.baidu.com/map/jsdemo/img/car.png', new BMap.Size(json.w, json.h), {\n        imageOffset: new BMap.Size(-json.l, -json.t),\n        infoWindowOffset: new BMap.Size(json.lb + 5, 1),\n        offset: new BMap.Size(json.x, json.h)\n      });\n      return icon;\n    },\n    addPolyline: function addPolyline() {\n      for (var i = 0; i < this.plPoints.length; i++) {\n        var json = this.plPoints[i];\n        var points = [];\n\n        for (var j = 0; j < json.points.length; j++) {\n          var p1 = json.points[j].split('|')[0];\n          var p2 = json.points[j].split('|')[1];\n          var point = new BMap.Point(p1, p2);\n          map.centerAndZoom(point, 16);\n          points.push(new BMap.Point(p1, p2));\n        }\n\n        var line = new BMap.Polyline(points, {\n          strokeStyle: json.style,\n          strokeWeight: json.weight,\n          strokeColor: json.color,\n          strokeOpacity: json.opacity\n        });\n        map.addOverlay(line);\n      }\n    }\n  }\n};\nexports.default = _default;",null]}