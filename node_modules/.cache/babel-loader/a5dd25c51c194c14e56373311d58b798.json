{"remainingRequest":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/biyue/Documents/LanHuo/LanHuo-biyue/src/views/subway/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/src/views/subway/Chart.vue","mtime":1568876001120},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.string.ends-with\");\n\nvar _stringify = _interopRequireDefault(require(\"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@babel/runtime-corejs2/core-js/json/stringify\"));\n\nvar _keys = _interopRequireDefault(require(\"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@babel/runtime-corejs2/core-js/object/keys\"));\n\nvar _echarts = _interopRequireDefault(require(\"echarts\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\n//\n//\n//\n//\nvar _default = {\n  name: 'Chart',\n  data: function data() {\n    return {};\n  },\n  mounted: function mounted() {\n    var that = this;\n\n    var chart = _echarts.default.init(document.getElementById('chart'), 'roma');\n\n    var option = {\n      title: {\n        text: '入站量和出站量',\n        subtext: '火车东站'\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      legend: {\n        data: ['入站量', '出站量']\n      },\n      toolbox: {\n        show: true,\n        feature: {\n          mark: {\n            show: true\n          },\n          dataView: {\n            show: true,\n            readOnly: false\n          },\n          magicType: {\n            show: true,\n            type: ['line', 'bar']\n          },\n          restore: {\n            show: true\n          }\n        }\n      },\n      calculable: true,\n      xAxis: [{\n        type: 'category',\n        data: ['16:30', '16:40', '16:50', '17:00', '17:10', '17:20', '17:30', '17:40', '17:50', '18:00', '18:10', '18:20']\n      }],\n      yAxis: [{\n        type: 'value'\n      }],\n      series: [{\n        name: '入站量',\n        type: 'bar',\n        data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3],\n        markPoint: {\n          data: [{\n            type: 'max',\n            name: '最大值'\n          }]\n        },\n        markLine: {\n          data: [{\n            type: 'average',\n            name: '平均值'\n          }]\n        }\n      }, {\n        name: '出站量',\n        type: 'bar',\n        data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3],\n        markPoint: {\n          data: []\n        }\n      }]\n    };\n    chart.setOption(option);\n    window.addEventListener('message', function (e) {\n      if (e.source === window.frames[0] || !isNaN(e.data)) {\n        var get_station_url = 'http://127.0.0.1:8000/Flow/show_flow/';\n        var now = new Date();\n        var stand_name = '火车东站';\n        var date = now.getDate();\n\n        if (!isNaN(e.data)) {\n          date = date + e.data - 2;\n        } else {\n          stand_name = e.data;\n        }\n\n        var hour = now.getHours();\n        var minutes = now.getMinutes();\n        var station_id_map = JSON.parse(localStorage.getItem('station_id_map'));\n        var id = station_id_map[stand_name]; // console.log(id)\n        // console.log(id)\n\n        _axios.default.post(get_station_url, {\n          year: 2019,\n          month: 5,\n          dates: [date],\n          stations: [id]\n        }).then(function (response) {\n          var data = response.data;\n          var station_info = JSON.parse(localStorage.getItem('stationInfo'));\n\n          if (station_info != null) {\n            var station_id = (0, _keys.default)(data)[0];\n\n            if (station_info[station_id] === undefined) {\n              station_info[station_id] = data[station_id];\n            } else {\n              // merge station dates info\n              var dates = (0, _keys.default)(data[station_id]);\n\n              for (var index = 0; index < dates.length; index++) {\n                if (station_info[station_id][dates[index]] === undefined) {\n                  station_info[station_id][dates[index]] = data[station_id][dates[index]];\n                }\n              }\n            }\n\n            localStorage.setItem('stationInfo', (0, _stringify.default)(station_info));\n            var station_name = stand_name;\n\n            if (!station_name.endsWith('站')) {\n              option.title.subtext = station_name.concat('站');\n            }\n\n            var time_slide_now = hour * 6 + Math.floor(minutes / 10);\n            time_slide_now = time_slide_now < 7 ? 7 : time_slide_now; // console.log(time_slide_now);\n\n            var range = 4;\n            var old_color = 'gray';\n\n            for (var _index = 0; _index < 12; _index++) {\n              // console.log(date);\n              // console.log(station_info)\n              if (_index < range) {\n                option.series[0].data[_index] = {\n                  value: station_info[station_id]['date_'.concat(date.toString())][time_slide_now - range + _index]['in'],\n                  itemStyle: {\n                    color: '#CD5C5C'\n                  }\n                };\n                option.series[1].data[_index] = {\n                  value: station_info[station_id]['date_'.concat(date.toString())][time_slide_now - range + _index]['out'],\n                  itemStyle: {\n                    color: '#4ad2ff'\n                  }\n                };\n              } else if (_index > range + 2) {\n                option.series[0].data[_index] = {\n                  value: station_info[station_id]['date_'.concat(date.toString())][time_slide_now - range + _index]['in'],\n                  itemStyle: {\n                    color: '#771100'\n                  }\n                };\n                option.series[1].data[_index] = {\n                  value: station_info[station_id]['date_'.concat(date.toString())][time_slide_now - range + _index]['out'],\n                  itemStyle: {\n                    color: '#96B3D3'\n                  }\n                };\n              } else {\n                option.series[0].data[_index] = station_info[station_id]['date_'.concat(date.toString())][time_slide_now - range + _index]['in'];\n                option.series[1].data[_index] = station_info[station_id]['date_'.concat(date.toString())][time_slide_now - range + _index]['out'];\n              }\n\n              var hour_now = Math.floor((time_slide_now - range + _index) / 6);\n              var time_now = (time_slide_now - range + _index) % 6; // console.log(option.xAxis);\n\n              option.xAxis[0].data[_index] = String(hour_now).concat(':').concat(String(time_now).concat('0'));\n            }\n\n            chart.setOption(option);\n          } else {\n            localStorage.setItem('stationInfo', (0, _stringify.default)(data));\n          }\n        }).catch(function (error) {\n          return window.console.log(error);\n        });\n      }\n    });\n  },\n  methods: {\n    randomInt: function randomInt(maxData) {\n      return +(Math.random() * (maxData - 10)).toFixed(1);\n    }\n  }\n};\nexports.default = _default;",null]}