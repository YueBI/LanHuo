{"remainingRequest":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/biyue/Documents/LanHuo/LanHuo-biyue/src/views/nested/userGroup/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/src/views/nested/userGroup/index.vue","mtime":1560229853475},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _set = _interopRequireDefault(require(\"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@babel/runtime-corejs2/core-js/set\"));\n\nvar _parseInt2 = _interopRequireDefault(require(\"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@babel/runtime-corejs2/core-js/parse-int\"));\n\nvar _api = _interopRequireDefault(require(\"@/api/userAbout/api.js\"));\n\nvar _api2 = _interopRequireDefault(require(\"@/api/hardware/api.js\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import '../../static/css/gateMana/common.css'\n// import '../../static/css/gateMana/dianziweilan.css'\nvar _default = {\n  data: function data() {\n    return {\n      testData: [],\n      filterFormFro: {\n        tableData: [],\n        totalCount: 15\n      },\n      userForm: {\n        userId: '',\n        userName: '',\n        userData: [],\n        totalUserCount: 15,\n        currentUserPage: 1\n      },\n      fenceForm: {\n        fenceId: '',\n        fenceName: '',\n        currentFencePage: 1,\n        totalFenceCount: 15,\n        fenceData: []\n      },\n      editForm: {\n        userData: [],\n        fenceData: [],\n        groupId: '',\n        groupName: '',\n        adminId: '',\n        adminName: '',\n        currentUserPage: 1,\n        currentFencePage: 1,\n        totalFenceCount: 15,\n        totalUserCount: 15\n      },\n      addForm: {\n        userData: [],\n        fenceData: [],\n        groupName: '',\n        adminId: '',\n        adminName: '',\n        currentUserPage: 1,\n        currentFencePage: 1,\n        totalFenceCount: 15,\n        totalUserCount: 15\n      },\n      filterForm: {\n        fenceId: '',\n        fenceName: '',\n        queryCondition: '',\n        queryContent: '',\n        currentPage: 1\n      },\n      tableWidth: '',\n      // 表格宽度\n      loadingText: '正在拼命加载中，请稍等......',\n      loading: false,\n      addUser: false,\n      addFence: false,\n      addVisable: false,\n      editVisable: false,\n      paginationVisible: true,\n      // 表格下方的分页显示\n      userPaginationVisible: true,\n      fencePaginationVisible: true,\n      formLabelWidth: '150px',\n      deleteForm: {\n        groupId: ''\n      },\n      list: [],\n      states: [],\n      fileList: [],\n      userData: [],\n      options: [{\n        value: '1',\n        label: '分组D'\n      }, {\n        value: '2',\n        label: '分组名称'\n      }],\n      adminOptions: [],\n      multipleUserSelection: [],\n      multipleFenceSelection: [],\n      withCredentials: true,\n      processing: false,\n      uploadTip: '点击上传',\n      formFlag: 0,\n      form: '',\n      dialogImportVisible: false,\n      errorResults: []\n    };\n  },\n  created: function created() {\n    console.log('111111111111');\n    this.getUserGroupFro();\n\n    for (var i = 0; i < 15; i++) {\n      this.filterFormFro.tableData.push({\n        index: i + 1,\n        groupId: i + 1,\n        groupName: i + 1,\n        description: i + 1,\n        adminName: i + 1,\n        adminId: i + 1,\n        userNum: i + 1,\n        fenceNum: i + 1\n      });\n    }\n\n    for (var _i = 0; _i < 15; _i++) {\n      // this.editForm.userData.push({\n      //   index: i + 1,\n      //   userId: i + 1,\n      //   userName: i + 1\n      // })\n      // this.editForm.fenceData.push({\n      //   index: i + 1,\n      //   fenceId: i + 1,\n      //   fenceName: i + 1,\n      //   fenceDecs: i + 1\n      // })\n      this.userForm.userData.push({\n        index: _i + 1,\n        userId: _i + 1,\n        userName: _i + 1\n      });\n      this.fenceForm.fenceData.push({\n        index: _i + 1,\n        fenceId: _i + 1,\n        fenceName: _i + 1\n      });\n    } // this.getAllUserFro()\n    // console.log('!!!!!!!!!!!!!')\n\n  },\n  mounted: function mounted() {\n    this.tableWidth = document.body.scrollWidth - 259 - 20;\n  },\n  methods: {\n    /** ********************************* 页面处理数据格式等函数 ************************************************ */\n    // 分页页面跳转时\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.filterForm.currentPage = val;\n      this.getUserGroupFro(this.filterForm.currentPage);\n    },\n    // 分页页面跳转时\n    handleEditUserCurrentChange: function handleEditUserCurrentChange(val) {\n      this.editForm.currentUserPage = val;\n      this.getUserFro(this.editForm.currentUserPage);\n    },\n    // 分页页面跳转时\n    handleEditFenceCurrentChange: function handleEditFenceCurrentChange(val) {\n      this.editForm.currentFencePage = val;\n      this.getFenceFro(this.editForm.currentFencePage);\n    },\n    // 分页页面跳转时\n    handleAddUserCurrentChange: function handleAddUserCurrentChange(val) {\n      this.addForm.currentUserPage = val;\n      this.getUserFro(this.addForm.currentUserPage);\n    },\n    // 分页页面跳转时\n    handleAddFenceCurrentChange: function handleAddFenceCurrentChange(val) {\n      this.addForm.currentFencePage = val;\n      this.getFenceFro(this.addForm.currentFencePage);\n    },\n    // 编辑用户组弹窗-添加用户表格多选\n    handleUserSelectionChange: function handleUserSelectionChange(val) {\n      this.multipleUserSelection = val;\n    },\n    // 编辑用户组弹窗-添加围栏表格多选\n    handleFenceSelectionChange: function handleFenceSelectionChange(val) {\n      this.multipleFenceSelection = val;\n    },\n    handleAddUser: function handleAddUser(form) {\n      this.addUser = true;\n      this.multipleUserSelection = [];\n      this.form = form;\n    },\n    handleAddFence: function handleAddFence(form) {\n      this.addFence = true;\n      this.multipleFenceSelection = [];\n      this.form = form;\n    },\n    // 设置表头样式\n    tableHeaderClassName: function tableHeaderClassName(_ref) {\n      var row = _ref.row,\n          column = _ref.column,\n          rowIndex = _ref.rowIndex,\n          columnIndex = _ref.columnIndex;\n\n      if (rowIndex === 0) {\n        return 'headerClass';\n      }\n    },\n    // 设置表格每一行样式\n    tableRowClassName: function tableRowClassName(_ref2) {\n      var row = _ref2.row,\n          rowIndex = _ref2.rowIndex;\n      return 'rowClass';\n    },\n    // 点击表格中的“编辑”按钮\n    handleEdit: function handleEdit(index, row) {\n      var data = this.filterFormFro.tableData[index];\n      this.editForm.oldGroupName = data.groupName;\n      this.editForm.groupId = data.groupId;\n      this.editForm.description = row.description;\n      this.editForm.groupName = row.groupName;\n      this.editForm.adminId = row.adminId;\n      this.editForm.adminName = row.adminName; // this.getFenceFro()\n      // this.getUserFro()\n\n      this.editVisable = true;\n    },\n    // 点击表格中的“删除”按钮\n    handleDelete: function handleDelete(index, row) {\n      var _this = this;\n\n      var data = this.filterFormFro.tableData[index];\n      this.deleteForm.groupId = data.groupId;\n      this.$confirm('确定删除该信息吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this.deleteUserGroupFro();\n      }).catch(function () {\n        _this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    // 编辑页面-点击用户表格中的“删除”按钮\n    handleEditUserDelete: function handleEditUserDelete(index, row) {\n      this.editForm.userData.splice(index, 1);\n    },\n    // 添加页面-点击用户表格中的“删除”按钮\n    handleAddUserDelete: function handleAddUserDelete(index, row) {\n      this.addForm.userData.splice(index, 1);\n    },\n    // 添加页面-点击围栏表格中的“删除”按钮\n    handleAddFenceDelete: function handleAddFenceDelete(index, row) {\n      this.addForm.fenceData.splice(index, 1);\n    },\n    // 编辑页面-点击围栏表格中的“删除”按钮\n    handleEditFenceDelete: function handleEditFenceDelete(index, row) {\n      this.editForm.fenceData.splice(index, 1);\n    },\n    // 重置表单\n    resetError: function resetError(formName) {\n      this.$nextTick(function () {\n        this.$refs[formName].resetFields();\n      });\n    },\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      this.$nextTick(function () {\n        this.$refs[formName].resetFields();\n      });\n    },\n    // 将时间转化为字符串(filterForm)\n    formatDayFro: function formatDayFro(now) {\n      var year = now.getFullYear();\n      var month = now.getMonth() + 1;\n      month = month < 10 ? '0' + month : month;\n      var date = now.getDate();\n      date = date < 10 ? '0' + date : date;\n      var hour = now.getHours();\n      hour = hour < 10 ? '0' + hour : hour;\n      var minute = now.getMinutes();\n      minute = minute < 10 ? '0' + minute : minute;\n      var second = now.getSeconds();\n      second = second < 10 ? '0' + second : second;\n      return year + '-' + month + '-' + date + ' ' + hour + ':' + minute + ':' + second;\n    },\n    handleChange: function handleChange(value, direction, movedKeys) {\n      console.log(value, direction, movedKeys);\n    },\n    // 编辑用户组信息，点击“保存”\n    submitEdit: function submitEdit() {\n      var _this2 = this;\n\n      this.$refs['editForm'].validate(function (valid) {\n        if (valid) {\n          _this2.editUserGroupFro();\n        } else {\n          return false;\n        }\n      });\n    },\n    // 添加用户组信息，点击“保存”\n    submitAdd: function submitAdd() {\n      var _this3 = this;\n\n      this.$refs['addForm'].validate(function (valid) {\n        if (valid) {\n          _this3.addUserGroupFro();\n        } else {\n          return false;\n        }\n      });\n    },\n    // 编辑用户组信息-添加用户，点击“保存”\n    submitUserAdd: function submitUserAdd() {\n      var _this4 = this;\n\n      this.$refs['editForm'].validate(function (valid) {\n        if (valid) {\n          _this4.editUserGroupFro();\n        } else {\n          return false;\n        }\n      });\n    },\n    // 编辑用户组信息-添加新用户到用户组，点击“保存”\n    submitUserAddToGroup: function submitUserAddToGroup() {\n      var _this5 = this;\n\n      this.$refs[this.form].validate(function (valid) {\n        if (valid) {\n          _this5.addUserToGroup(_this5.form);\n        } else {\n          return false;\n        }\n      });\n    },\n    // 编辑用户组信息-添加新围栏到用户组，点击“保存”\n    submitFenceAddToGroup: function submitFenceAddToGroup() {\n      var _this6 = this;\n\n      this.$refs[this.form].validate(function (valid) {\n        if (valid) {\n          _this6.addFenceToGroup(_this6.form);\n        } else {\n          return false;\n        }\n      });\n    },\n    // 管理员下拉列表\n    adminRemoteMethod: function adminRemoteMethod(query) {\n      var _this7 = this;\n\n      if (query !== '') {\n        _api.default.getAllAdmin({}).then(function (res) {\n          if (res.data.result === 1000) {\n            var data = res.data.content;\n\n            if (data.list.length > 0) {\n              _this7.adminOptions = data.list;\n            }\n          } else {\n            _this7.$message.error(res.resultDesp);\n          }\n        }).catch(function (error) {\n          _this7.$message.error(error);\n        });\n      }\n    },\n    getAdminId: function getAdminId(form) {\n      for (var i = 0; i < this.adminOptions.length; i++) {\n        if (this[form].adminName === this.adminOptions[i].adminName) {\n          this[form].adminId = this.adminOptions[i].adminId;\n          break;\n        }\n      }\n    },\n\n    /** ***************************** 向后台发送请求 ***************************************** */\n    // 查询用户组信息\n    getUserGroupFro: function getUserGroupFro(pageNum) {\n      var _this8 = this;\n\n      this.loading = true;\n      var para = {\n        pageSize: 15,\n        pageNum: (0, _parseInt2.default)(this.filterForm.currentPage)\n      };\n      pageNum ? this.filterForm.currentPage = pageNum : this.filterForm.currentPage = 1;\n\n      if (this.filterForm.queryCondition && this.filterForm.queryContent !== '') {\n        if (this.filterForm.queryCondition === '1') {\n          para.groupId = (0, _parseInt2.default)(this.filterForm.queryContent);\n        } else {\n          para.groupName = this.filterForm.queryContent;\n        }\n      } else {\n        para.groupId = null;\n        para.groupName = null;\n      }\n\n      _api.default.getUserGroup(para).then(function (res) {\n        _this8.filterFormFro.tableData = [];\n        _this8.loading = false;\n\n        if (res.data.result === 1000) {\n          var data = res.data.content;\n          data.allPages > 1 ? _this8.paginationVisible = true : _this8.paginationVisible = false;\n\n          if (data.list.length > 0) {\n            _this8.filterFormFro.tableData = data.list; // this.filterFormFro.totalCount = data.allCount\n\n            for (var i = 0; i < _this8.filterFormFro.tableData.length; i++) {\n              _this8.filterFormFro.tableData[i].index = (_this8.filterForm.currentPage - 1) * 15 + i + 1;\n            }\n          } else {\n            _this8.$message.warning('没有查到任何用户组信息');\n          }\n        } else {\n          _this8.$message.error(res.resultDesp);\n        }\n      }).catch(function (error) {\n        _this8.loading = false;\n\n        _this8.$message.error(error);\n      });\n    },\n    // 查询用户组的用户信息\n    getUserFro: function getUserFro(pageNum) {\n      var _this9 = this;\n\n      var para = {\n        // pageSize: 15,\n        // pageNum: parseInt(this.editForm.currentUserPage),\n        userGroupId: this.editForm.userGroupId\n      };\n      pageNum ? this.editForm.userCurrentPage = pageNum : this.editForm.userCurrentPage = 1;\n\n      _api.default.getUser(para).then(function (res) {\n        _this9.editForm.userData = [];\n        _this9.loading = false;\n\n        if (res.result === 1000) {\n          var data = res.content;\n          data.allPages > 1 ? _this9.userPaginationVisible = true : _this9.userPaginationVisible = false;\n\n          if (data.list.length > 0) {\n            _this9.testData = data.list;\n            _this9.editForm.userData = data.list;\n            _this9.editForm.totalUserCount = data.allCount;\n\n            for (var i = 0; i < _this9.editForm.userData.length; i++) {\n              // this.editForm.userData[i].index = (this.editForm.currentUserPage - 1) * 15 + i + 1\n              _this9.editForm.userData[i].index = i + 1;\n            }\n          } else {\n            _this9.$message.warning('没有查到任何用户信息');\n          }\n        } else {\n          _this9.$message.error(res.resultDesp);\n        }\n      }).catch(function (error) {\n        _this9.$message.error(error);\n      });\n    },\n    // 查询所有用户信息\n    getAllUserFro: function getAllUserFro() {\n      var para = {\n        // pageSize: 15,\n        // pageNum: parseInt(this.editForm.currentUserPage),\n        userId: this.userForm.userId,\n        userName: this.userForm.userName\n      };\n      console.log(para); // userapi.getUser(para).then(res => {\n      //   if (res.result === 1000) {\n      //     data = res.content.list\n      //     this.userForm.userData = res.content.list\n      //   }\n      // })\n    },\n    // 查询用户组的围栏信息\n    getFenceFro: function getFenceFro(pageNum) {\n      var _this10 = this;\n\n      this.loading = true;\n      var para = {\n        pageSize: 5,\n        pageNum: (0, _parseInt2.default)(this.editForm.currentFencePage)\n      };\n      pageNum ? this.editForm.currentFencePage = pageNum : this.editForm.currentFencePage = 1;\n      para.groupName = this.editForm.groupName;\n      console.log('表格查询围栏');\n      console.log(para);\n\n      _api2.default.getFence(para).then(function (res) {\n        _this10.editForm.fenceData = [];\n\n        if (res.result === 1000) {\n          var data = res.content;\n          data.allPages > 1 ? _this10.fencePaginationVisible = true : _this10.fencePaginationVisible = false;\n\n          if (data.list.length > 0) {\n            _this10.editForm.fenceData = data.list;\n            _this10.editForm.totalFenceCount = data.allCount;\n\n            for (var i = 0; i < _this10.editForm.fenceData.length; i++) {\n              _this10.editForm.fenceData[i].index = (_this10.editForm.currentFencePage - 1) * 15 + i + 1;\n            }\n          } else {\n            _this10.$message.warning('没有查到任何围栏信息');\n          }\n        } else {\n          _this10.$message.error(res.resultDesp);\n        }\n      }).catch(function (error) {\n        _this10.$message.error(error);\n      });\n    },\n    // 查询所有围栏信息\n    getAllFenceFro: function getAllFenceFro() {\n      var para = {\n        pageSize: 15,\n        pageNum: (0, _parseInt2.default)(this.editForm.currentFencePage),\n        fenceId: this.fenceForm.fenceId,\n        fenceName: this.fenceForm.fenceName\n      };\n      console.log(para); // api.getFence(para).then(res => {\n      //   if (res.result === 1000) {\n      //     data = res.content.list\n      //     this.fenceForm.fenceData = res.content.list\n      //   }\n      // })\n    },\n    // 编辑用户组信息\n    editUserGroupFro: function editUserGroupFro() {\n      var _this11 = this;\n\n      var para = {\n        description: this.editForm.description,\n        groupName: this.editForm.groupName,\n        oldGroupName: this.editForm.oldGroupName,\n        groupId: this.editForm.groupId,\n        adminId: this.editForm.adminId,\n        adminName: this.editForm.adminName,\n        fenceSet: [],\n        userSet: []\n      };\n      var fenceName = new _set.default();\n      var userName = new _set.default();\n\n      for (var i = 0; i < this.editForm.fenceData.length; i++) {\n        fenceName.add(this.editForm.fenceData[i].fenceId);\n        userName.add(this.editForm.userData[i].userId);\n      }\n\n      para.fenceSet = fenceName;\n      para.userSet = userName;\n      console.log(para);\n\n      _api.default.editUserGroup(para).then(function (res) {\n        if (res.result === 1000) {\n          _this11.editVisable = false;\n\n          _this11.$message.success('编辑用户组信息成功');\n\n          _this11.getUserGroupFro();\n        } else {\n          _this11.$message.warning(res.resultDesp);\n        }\n      }).catch(function (error) {\n        _this11.editVisable = false;\n\n        _this11.$message.error(error);\n      });\n    },\n    // 添加用户组信息\n    addUserGroupFro: function addUserGroupFro() {\n      var para = {\n        description: this.addForm.description,\n        groupName: this.addForm.groupName,\n        adminId: (0, _parseInt2.default)('1'),\n        adminName: 'admin',\n        fenceSet: [],\n        userSet: []\n      };\n      var fenceName = new _set.default();\n      var userName = new _set.default();\n\n      for (var i = 0; i < this.addForm.userData.length; i++) {\n        userName.add(this.addForm.userData[i].userId);\n      }\n\n      for (var _i2 = 0; _i2 < this.addForm.fenceData.length; _i2++) {\n        fenceName.add(this.addForm.fenceData[_i2].fenceId);\n      }\n\n      para.fenceSet = fenceName;\n      para.userSet = userName;\n      console.log(para); // userapi.addUserGroup(para).then(res => {\n      //   if (res.result === 1000) {\n      //     this.addVisable = false\n      //     this.$message.success('添加用户组信息成功')\n      //     this.getUserGroupFro()\n      //   } else {\n      //     this.$message.warning(res.resultDesp)\n      //   }\n      // }).catch(error => {\n      //   this.editVisable = false\n      //   this.$message.error(error)\n      // })\n    },\n    // 添加用户到用户组并刷新弹出框中的用户表格，去重\n    addUserToGroup: function addUserToGroup(form) {\n      var length = this[form].userData.length;\n      console.log('用户多选');\n      console.log(this.multipleUserSelection);\n      console.log(this.addForm.userData);\n\n      for (var i = 0; i < this.multipleUserSelection.length; i++) {\n        for (var j = 0; j < this.userForm.userData.length; j++) {\n          if (this.multipleUserSelection[i].index === this.userForm.userData[j].index) {\n            this[form].userData.push({\n              index: length + i + 1,\n              userId: this.userForm.userData[j].userId,\n              userName: this.userForm.userData[j].userName\n            });\n          }\n        }\n      }\n\n      this.multipleUserSelection = [];\n      this.addUser = false;\n    },\n    // 添加围栏到用户组并刷新弹出框中的用户表格，去重\n    addFenceToGroup: function addFenceToGroup(form) {\n      var length = this[form].fenceData.length;\n\n      for (var i = 0; i < this.multipleFenceSelection.length; i++) {\n        for (var j = 0; j < this.fenceForm.fenceData.length; j++) {\n          if (this.multipleFenceSelection[i].index === this.fenceForm.fenceData[j].index) {\n            this[form].fenceData.push({\n              index: length + i + 1,\n              fenceId: this.fenceForm.fenceData[j].fenceId,\n              fenceName: this.fenceForm.fenceData[j].fenceName,\n              fenceDes: this.fenceForm.fenceData[j].fenceDes\n            });\n          }\n        }\n      }\n\n      this.multipleFenceSelection = [];\n      this.addFence = false;\n    },\n    // 硬件信息-删除用户组信息\n    deleteUserGroupFro: function deleteUserGroupFro() {\n      var _this12 = this;\n\n      var para = {\n        groupId: (0, _parseInt2.default)(this.deleteForm.groupId)\n      };\n      console.log(para);\n\n      _api.default.deleteUserGroup(para).then(function (res) {\n        if (res.result === 1000) {\n          _this12.deleteVisable = false;\n\n          _this12.$message.success('删除用户组信息成功');\n\n          _this12.getUserGroupFro();\n        } else {\n          _this12.$message.warning(res.resultDesp);\n        }\n      }).catch(function (error) {\n        _this12.deleteVisable = false;\n\n        _this12.$message.error(error);\n      });\n    }\n  }\n};\nexports.default = _default;",null]}