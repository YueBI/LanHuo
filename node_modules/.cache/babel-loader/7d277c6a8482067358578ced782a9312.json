{"remainingRequest":"/Users/biyue/Documents/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/biyue/Documents/LanHuo-biyue/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/biyue/Documents/LanHuo-biyue/src/api/userAbout/api.js","dependencies":[{"path":"/Users/biyue/Documents/LanHuo-biyue/src/api/userAbout/api.js","mtime":1557802596050},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/biyue/Documents/LanHuo-biyue/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"/Users/biyue/Documents/LanHuo-biyue/node_modules/@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.fetch = fetch;\nexports.default = void 0;\n\nvar _promise = _interopRequireDefault(require(\"/Users/biyue/Documents/LanHuo-biyue/node_modules/@babel/runtime-corejs2/core-js/promise\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\n// const baseUrl = 'https://127.0.0.1:8080'\n// const baseUrl = 'http://10.210.70.164:8080'\n// const baseUrl = 'http://10.112.20.181:8080'\n// const baseUrl = 'http://10.112.10.121:8080'\nvar baseUrl = 'http://http://112.74.189.126:8080';\n\nvar instance = _axios.default.create();\n\ninstance.defaults.timeout = 6000;\ninstance.interceptors.request.use(function (config) {\n  instance.defaults.headers['Content-Type'] = 'application/json;charset=UTF-8';\n  return config;\n}, function (error) {\n  return _promise.default.reject(error);\n});\n\nfunction fetch(url, params) {\n  return new _promise.default(function (resolve, reject) {\n    instance.post(url, params).then(function (response) {\n      resolve(response);\n    }).catch(function (error) {\n      console.log(url);\n      reject(error);\n    });\n  });\n}\n\nvar _default = {\n  // 查询管理员列表\n  getAdmin: function getAdmin(params) {\n    return fetch(\"\".concat(baseUrl, \"/fence/interface/admin/query_admin\"), params);\n  },\n  // 下拉列表-查询所有管理员\n  getAllAdmin: function getAllAdmin(params) {\n    return fetch(\"\".concat(baseUrl, \"/fence/interface/admin/query_all_admin\"), params);\n  },\n  // 用户修改密码\n  changePwd: function changePwd(params) {\n    return fetch(\"\".concat(baseUrl, \"/fence/interface/admin/update_password\"), params);\n  },\n  // 添加管理员\n  addAdmin: function addAdmin(params) {\n    return fetch(\"\".concat(baseUrl, \"/fence/interface/admin/add_admin\"), params);\n  },\n  // 修改管理员信息\n  editAdmin: function editAdmin(params) {\n    return fetch(\"\".concat(baseUrl, \"/fence/interface/admin/update_admin\"), params);\n  },\n  // 删除管理员\n  deleteAdmin: function deleteAdmin(params) {\n    return fetch(\"\".concat(baseUrl, \"/fence/interface/admin/delete_admin\"), params);\n  },\n  // 查询用户组\n  getUserGroup: function getUserGroup(params) {\n    return fetch(\"\".concat(baseUrl, \"/fence/interface/group/query_group\"), params);\n  },\n  // 查询所有用户组\n  getAllUserGroup: function getAllUserGroup(params) {\n    return fetch(\"\".concat(baseUrl, \"/fence/interface/group/query_all_group\"), params);\n  },\n  // 查询用户组用户\n  getUser: function getUser(params) {\n    return fetch(\"\".concat(baseUrl, \"/fence/interface/group/query_group_info\"), params);\n  },\n  // 添加用户组\n  addUserGroup: function addUserGroup(params) {\n    return fetch(\"\".concat(baseUrl, \"/fence/interface/group/add_group\"), params);\n  },\n  // 修改用户组\n  editUserGroup: function editUserGroup(params) {\n    return fetch(\"\".concat(baseUrl, \"/fence/interface/group/update_group\"), params);\n  },\n  // 删除用户组\n  deleteUserGroup: function deleteUserGroup(params) {\n    return fetch(\"\".concat(baseUrl, \"/fence/interface/group/delete_group\"), params);\n  }\n};\nexports.default = _default;",null]}