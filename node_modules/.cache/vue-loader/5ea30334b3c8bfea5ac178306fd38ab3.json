{"remainingRequest":"/Users/biyue/Documents/LanHuo-biyue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/biyue/Documents/LanHuo-biyue/src/views/nested/alarmMana/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/biyue/Documents/LanHuo-biyue/src/views/nested/alarmMana/index.vue","mtime":1557731454676},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport api from '@/api/hardware/api.js'\r\nimport FileSaver from 'file-saver'\r\nimport XLSX from 'xlsx'\r\n// import '../../static/css/gateMana/common.css'\r\n// import '../../static/css/gateMana/dianziweilan.css'\r\nexport default {\r\n  created () {\r\n    console.log('!!!!!!!!!!!!!')\r\n    this.filterForm.fenceId = this.$route.query.fenceId\r\n    this.filterForm.fenceName = this.$route.query.fenceName\r\n    this.getAlarmFro()\r\n  },\r\n  data () {\r\n    return {\r\n      testData: [],\r\n      filterFormFro: {\r\n        tableData: [],\r\n        totalCount: 0\r\n      },\r\n      filterForm: {\r\n        fenceId: '',\r\n        fenceName: '',\r\n        queryCondition: '',\r\n        queryContent: '',\r\n        alarmType: '用户',\r\n        currentPage: 1\r\n      },\r\n      // 查询条件下的五个选项\r\n      options: [{\r\n        value: '1',\r\n        label: '围栏ID'\r\n      }, {\r\n        value: '2',\r\n        label: '围栏名称'\r\n      }, {\r\n        value: '3',\r\n        label: '分组ID'\r\n      }, {\r\n        value: '4',\r\n        label: '分组名称'\r\n      }, {\r\n        value: '5',\r\n        label: '日期'\r\n      }],\r\n      // 警报类型下拉菜单的两个选项\r\n      alarmTypeOptions: [{\r\n        value: '用户',\r\n        label: '用户'\r\n      }, {\r\n        value: '设备',\r\n        label: '设备'\r\n      }],\r\n      pickerOptions: {\r\n        shortcuts: [{\r\n          text: '今天',\r\n          onClick (picker) {\r\n            picker.$emit('pick', new Date())\r\n          }\r\n        }, {\r\n          text: '昨天',\r\n          onClick (picker) {\r\n            const date = new Date()\r\n            date.setTime(date.getTime() - 3600 * 1000 * 24)\r\n            picker.$emit('pick', date)\r\n          }\r\n        }, {\r\n          text: '一周前',\r\n          onClick (picker) {\r\n            const date = new Date()\r\n            date.setTime(date.getTime() - 3600 * 1000 * 24 * 7)\r\n            picker.$emit('pick', date)\r\n          }\r\n        }]\r\n      },\r\n      tableWidth: '', // 表格宽度\r\n      loadingText: '正在拼命加载中，请稍等......',\r\n      loading: false,\r\n      paginationVisible: true, // 表格下方的分页显示\r\n      formLabelWidth: '150px',\r\n      deleteForm: {\r\n        alarmInfoId: ''\r\n      },\r\n      handleForm: {\r\n        alarmInfoId: ''\r\n      },\r\n      list: [],\r\n      states: [],\r\n      fileList: [],\r\n      showContent: true,\r\n      showDate: false,\r\n      multipleSelection: [],\r\n      withCredentials: true,\r\n      processing: false,\r\n      uploadTip: '点击上传',\r\n      importFlag: 1,\r\n      show: false,\r\n      dialogImportVisible: false,\r\n      errorResults: []\r\n    }\r\n  },\r\n  methods: {\r\n    /** ********************************* 页面处理数据格式等函数 ************************************************ */\r\n    // 分页页面跳转时\r\n    handleCurrentChange (val) {\r\n      this.filterForm.currentPage = val\r\n      this.getAlarmFro(this.filterForm.currentPage)\r\n    },\r\n    // 设置表头样式\r\n    tableHeaderClassName ({row, column, rowIndex, columnIndex}) {\r\n      if (rowIndex === 0) {\r\n        return 'headerClass'\r\n      }\r\n    },\r\n    // 设置表格每一行样式\r\n    tableRowClassName ({row, rowIndex}) {\r\n      return 'rowClass'\r\n    },\r\n    // 点击表格中的“删除”按钮\r\n    handleDelete (index, row) {\r\n      this.deleteForm.alarmInfoId = row.alarmInfoId\r\n      // let data = this.filterFormFro.tableData[index]\r\n      // this.deleteForm.alarmInfoId = data.alarmInfoId\r\n      this.$confirm('确定删除该信息吗?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.deleteAlarmFro()\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        })\r\n      })\r\n    },\r\n     // 点击表格中的“处理”按钮\r\n    handleAlarm (index, row) {\r\n      this.handleForm.alarmInfoId = row.alarmInfoId\r\n      this.$confirm('是否处理该报警信息?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.handleAlarmFro()\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消'\r\n        })\r\n      })\r\n    },\r\n    // 点击“导出”按钮\r\n    download () {\r\n      this.$confirm('确定导出数据吗?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.exportExcel()\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消导出'\r\n        })\r\n      })\r\n    },\r\n    // 重置表单\r\n    resetError (formName) {\r\n      this.$nextTick(function () {\r\n        this.$refs[formName].resetFields()\r\n      })\r\n    },\r\n    // 重置表单\r\n    resetForm (formName) {\r\n      this.$nextTick(function () {\r\n        this.$refs[formName].resetFields()\r\n      })\r\n    },\r\n    // 将时间转化为字符串(filterForm)\r\n    formatDayFro (now) {\r\n      var year = now.getFullYear()\r\n      var month = now.getMonth() + 1\r\n      month = month < 10 ? '0' + month : month\r\n      var date = now.getDate()\r\n      date = date < 10 ? ('0' + date) : date\r\n      // var hour = now.getHours()\r\n      // hour = hour < 10 ? ('0' + hour) : hour\r\n      // var minute = now.getMinutes()\r\n      // minute = minute < 10 ? ('0' + minute) : minute\r\n      // var second = now.getSeconds()\r\n      // second = second < 10 ? ('0' + second) : second\r\n      // return year + '-' + month + '-' + date + ' ' + hour + ':' + minute + ':' + second\r\n      return year + '-' + month + '-' + date + ' '\r\n    },\r\n    getConditionView (value) {\r\n      if (value === '5') {\r\n        this.showDate = true\r\n        this.showContent = false\r\n      } else {\r\n        this.showContent = true\r\n        this.showDate = false\r\n      }\r\n      this.filterForm.queryContent = ''\r\n    },\r\n    // 导出\r\n    exportExcel () {\r\n      /* generate workbook object from table */\r\n      var wb = XLSX.utils.table_to_book(document.querySelector('#out-table'))\r\n      /* get binary string as output */\r\n      var wbout = XLSX.write(wb, { bookType: 'xlsx', bookSST: true, type: 'array' })\r\n      try {\r\n        FileSaver.saveAs(new Blob([wbout], { type: 'application/octet-stream' }), 'sheetjs.xlsx')\r\n      } catch (e) { if (typeof console !== 'undefined') console.log(e, wbout) }\r\n      return wbout\r\n    },\r\n    /** ***************************** 向后台发送请求 ***************************************** */\r\n    // 查询警报信息\r\n    getAlarmFro (pageNum) {\r\n      this.loading = false\r\n      let para = {\r\n        pageSize: 15,\r\n        pageNum: parseInt(this.filterForm.currentPage),\r\n        alarmType: this.filterForm.alarmType\r\n      }\r\n      pageNum ? this.filterForm.currentPage = pageNum : this.filterForm.currentPage = 1\r\n      if (this.filterForm.queryCondition && this.filterForm.queryContent !== '') {\r\n        if (this.filterForm.queryCondition === '1') {\r\n          para.fenceId = parseInt(this.filterForm.queryContent)\r\n        } else if (this.filterForm.queryCondition === '2') {\r\n          para.fenceName = this.filterForm.queryContent\r\n        } else if (this.filterForm.queryCondition === '3') {\r\n          para.groupId = this.filterForm.queryContent\r\n        } else if (this.filterForm.queryCondition === '4') {\r\n          para.groupName = this.filterForm.queryContent\r\n        } else if (this.filterForm.queryCondition === '5') {\r\n          if (this.filterForm.queryContent) {\r\n            para.data = this.formatDayFro(this.filterForm.queryContent)\r\n          } else {\r\n            para.date = null\r\n          }\r\n        }\r\n      } else {\r\n        para.fenceId = null\r\n        para.fenceName = null\r\n        para.groupId = null\r\n        para.groupName = null\r\n        para.data = null\r\n      }\r\n      console.log(para)\r\n      api.getAlarm(para).then(res => {\r\n        this.filterFormFro.tableData = []\r\n        this.loading = false\r\n        if (res.result === 1000) {\r\n          let data = res.content\r\n          data.allPages > 1 ? this.paginationVisible = true : this.paginationVisible = false\r\n          if (data.list.length > 0) {\r\n            this.testData = data.list\r\n            this.filterFormFro.tableData = data.list\r\n            this.filterFormFro.totalCount = data.allCount\r\n            for (let i = 0; i < this.filterFormFro.tableData.length; i++) {\r\n              this.filterFormFro.tableData[i].index = (this.filterForm.currentPage - 1) * 15 + i + 1\r\n              this.filterFormFro.tableData[i].alarmTime = this.formatDayFro(new Date(this.filterFormFro.tableData[i].alarmTime))\r\n              if (this.filterFormFro.tableData[i].isDeal === true) {\r\n                this.filterFormFro.tableData[i].isDeal = '已处理'\r\n              } else {\r\n                this.filterFormFro.tableData[i].isDeal = '未处理'\r\n              }\r\n            }\r\n          } else {\r\n            this.$message.warning('没有查到任何警报信息')\r\n          }\r\n        } else {\r\n          this.$message.error(res.resultDesp)\r\n        }\r\n      }).catch(error => {\r\n        this.loading = false\r\n        this.$message.error(error)\r\n      })\r\n    },\r\n    // 删除报警信息\r\n    deleteAlarmFro () {\r\n      let para = {\r\n        alarmInfoId: parseInt(this.deleteForm.alarmInfoId)\r\n      }\r\n      console.log('delete')\r\n      console.log(para)\r\n      api.deleteAlarm(para).then(res => {\r\n        if (res.result === 1000) {\r\n          this.deleteVisable = false\r\n          this.$message.success('删除警报信息成功')\r\n          this.getAlarmFro()\r\n        } else {\r\n          this.$message.warning(res.resultDesp)\r\n        }\r\n      }).catch(error => {\r\n        this.deleteVisable = false\r\n        this.$message.error(error)\r\n      })\r\n    },\r\n     // 处理报警信息\r\n    handleAlarmFro () {\r\n      let para = {\r\n        alarmInfoId: parseInt(this.handleForm.alarmInfoId)\r\n      }\r\n      console.log('deal')\r\n      console.log(para)\r\n      api.handleAlarm(para).then(res => {\r\n        if (res.result === 1000) {\r\n          this.deleteVisable = false\r\n          this.$message.success('报警信息已处理')\r\n          this.getAlarmFro()\r\n        } else {\r\n          this.$message.warning(res.resultDesp)\r\n        }\r\n      }).catch(error => {\r\n        this.deleteVisable = false\r\n        this.$message.error(error)\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    this.tableWidth = document.body.scrollWidth - 259 - 20\r\n  }\r\n}\r\n",null]}