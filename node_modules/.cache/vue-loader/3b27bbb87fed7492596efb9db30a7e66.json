{"remainingRequest":"/Users/biyue/Documents/LanHuo-biyue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/biyue/Documents/LanHuo-biyue/src/views/zhangyilei/trackforecast.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/biyue/Documents/LanHuo-biyue/src/views/zhangyilei/trackforecast.vue","mtime":1557380865785},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from 'axios'\r\nimport { join } from 'path'\r\nvar map\r\nvar tracknumber\r\nexport default {\r\n  data() {\r\n    return {\r\n      trackID: [],\r\n      list: [],\r\n      currentRow: null,\r\n      errored: false\r\n    }\r\n  },\r\n  computed: {\r\n    activeIndex() {\r\n      return this.$route.path.replace('/', '')\r\n    }\r\n  },\r\n  mounted: function() {\r\n    this.init()\r\n    this.fetchdata()\r\n  },\r\n  methods: {\r\n    init: function() {\r\n      map = new AMap.Map('container', {\r\n        center: [116.397428, 39.90923],\r\n        resizeEnable: true,\r\n        zoom: 12,\r\n        mapStyle: 'amap://styles/macaron'\r\n      })\r\n      AMap.plugin(['AMap.ToolBar', 'AMap.Scale'], function() {\r\n        map.addControl(new AMap.ToolBar())\r\n        map.addControl(new AMap.Scale())\r\n      })\r\n    },\r\n    fetchdata() {\r\n      axios\r\n        .get(\r\n          'http://112.74.189.126:8080/bluefire/Integererface/data_manage/getTrajectoryPrediction'\r\n        )\r\n        .then(response => {\r\n          console.log(response)\r\n          this.list = response.data.content.list\r\n          for (var i = 0; i < this.list.length; i++) {\r\n            this.trackID.push({\r\n              trackID: this.list[i].trajectory_id\r\n            })\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    addforecastMarker(index) {\r\n      // var canvas = document.createElement(\"canvas\");\r\n      // canvas.width = canvas.height = 200;\r\n      // var context = canvas.getContext(\"2d\");\r\n      // context.fillStyle = \"rgb(0,100,255)\";\r\n      // context.strokeStyle = \"white\";\r\n      // context.globalAlpha = 1;\r\n      // context.lineWidth = 2;\r\n\r\n      // var radious = 0;\r\n      // var draw = function() {\r\n      //   context.clearRect(0, 0, 200, 200);\r\n      //   context.globalAlpha = (context.globalAlpha - 0.01 + 1) % 1;\r\n      //   radious = (radious + 1) % 100;\r\n\r\n      //   context.beginPath();\r\n      //   context.arc(100, 100, radious, 0, 2 * Math.PI);\r\n      //   context.fill();\r\n      //   context.stroke();\r\n\r\n      //   //2D视图时可以省略\r\n      //   CanvasLayer.reFresh();\r\n\r\n      //   AMap.Util.requestAnimFrame(draw);\r\n      // };\r\n\r\n      // var CanvasLayer = new AMap.CanvasLayer({\r\n      //   canvas: canvas,\r\n      //   bounds: new AMap.Bounds(\r\n      //     [116.328931, 39.937229],\r\n      //     [116.342659, 39.946275]\r\n      //   ),\r\n      //   zooms: [3, 18]\r\n      // });\r\n\r\n      // CanvasLayer.setMap(map);\r\n      // draw();\r\n\r\n      var forecastmarker = new AMap.Marker({\r\n        position: new AMap.LngLat(\r\n          this.list[index].present_longitude,\r\n          this.list[index].present_latitude\r\n        ),\r\n        // icon: '../../static/icon1.png'\r\n          icon: \"//vdata.amap.com/icons/b18/1/2.png\"\r\n      })\r\n      map.add(forecastmarker)\r\n    },\r\n    addrealMarker(index) {\r\n      var realmarker = new AMap.Marker({\r\n        position: new AMap.LngLat(\r\n          this.list[index].original_longitude,\r\n          this.list[index].original_latitude\r\n        )\r\n        // icon: \"//vdata.amap.com/icons/b18/1/2.png\"\r\n      })\r\n      map.add(realmarker)\r\n    },\r\n    handleCurrentChange(tracknumber) {\r\n      this.currentRow.index = tracknumber\r\n      console.log(this.currentRow.index)\r\n    },\r\n    clearmarker() {\r\n      this.init()\r\n    }\r\n  }\r\n}\r\n",null]}