{"remainingRequest":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/biyue/Documents/LanHuo/LanHuo-biyue/src/views/nested/userGroup/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/src/views/nested/userGroup/index.vue","mtime":1560229853475},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport userapi from '@/api/userAbout/api.js'\r\nimport api from '@/api/hardware/api.js'\r\n// import '../../static/css/gateMana/common.css'\r\n// import '../../static/css/gateMana/dianziweilan.css'\r\nexport default {\r\n  data() {\r\n    return {\r\n      testData: [],\r\n      filterFormFro: {\r\n        tableData: [],\r\n        totalCount: 15\r\n      },\r\n      userForm: {\r\n        userId: '',\r\n        userName: '',\r\n        userData: [],\r\n        totalUserCount: 15,\r\n        currentUserPage: 1\r\n      },\r\n      fenceForm: {\r\n        fenceId: '',\r\n        fenceName: '',\r\n        currentFencePage: 1,\r\n        totalFenceCount: 15,\r\n        fenceData: []\r\n      },\r\n      editForm: {\r\n        userData: [],\r\n        fenceData: [],\r\n        groupId: '',\r\n        groupName: '',\r\n        adminId: '',\r\n        adminName: '',\r\n        currentUserPage: 1,\r\n        currentFencePage: 1,\r\n        totalFenceCount: 15,\r\n        totalUserCount: 15\r\n      },\r\n      addForm: {\r\n        userData: [],\r\n        fenceData: [],\r\n        groupName: '',\r\n        adminId: '',\r\n        adminName: '',\r\n        currentUserPage: 1,\r\n        currentFencePage: 1,\r\n        totalFenceCount: 15,\r\n        totalUserCount: 15\r\n      },\r\n      filterForm: {\r\n        fenceId: '',\r\n        fenceName: '',\r\n        queryCondition: '',\r\n        queryContent: '',\r\n        currentPage: 1\r\n      },\r\n      tableWidth: '', // 表格宽度\r\n      loadingText: '正在拼命加载中，请稍等......',\r\n      loading: false,\r\n      addUser: false,\r\n      addFence: false,\r\n      addVisable: false,\r\n      editVisable: false,\r\n      paginationVisible: true, // 表格下方的分页显示\r\n      userPaginationVisible: true,\r\n      fencePaginationVisible: true,\r\n      formLabelWidth: '150px',\r\n      deleteForm: {\r\n        groupId: ''\r\n      },\r\n      list: [],\r\n      states: [],\r\n      fileList: [],\r\n      userData: [],\r\n      options: [{\r\n        value: '1',\r\n        label: '分组D'\r\n      }, {\r\n        value: '2',\r\n        label: '分组名称'\r\n      }],\r\n      adminOptions: [],\r\n      multipleUserSelection: [],\r\n      multipleFenceSelection: [],\r\n      withCredentials: true,\r\n      processing: false,\r\n      uploadTip: '点击上传',\r\n      formFlag: 0,\r\n      form: '',\r\n      dialogImportVisible: false,\r\n      errorResults: []\r\n    }\r\n  },\r\n  created() {\r\n    console.log('111111111111')\r\n    this.getUserGroupFro()\r\n    for (let i = 0; i < 15; i++) {\r\n      this.filterFormFro.tableData.push({\r\n        index: i + 1,\r\n        groupId: i + 1,\r\n        groupName: i + 1,\r\n        description: i + 1,\r\n        adminName: i + 1,\r\n        adminId: i + 1,\r\n        userNum: i + 1,\r\n        fenceNum: i + 1\r\n      })\r\n    }\r\n    for (let i = 0; i < 15; i++) {\r\n      // this.editForm.userData.push({\r\n      //   index: i + 1,\r\n      //   userId: i + 1,\r\n      //   userName: i + 1\r\n      // })\r\n      // this.editForm.fenceData.push({\r\n      //   index: i + 1,\r\n      //   fenceId: i + 1,\r\n      //   fenceName: i + 1,\r\n      //   fenceDecs: i + 1\r\n      // })\r\n      this.userForm.userData.push({\r\n        index: i + 1,\r\n        userId: i + 1,\r\n        userName: i + 1\r\n      })\r\n      this.fenceForm.fenceData.push({\r\n        index: i + 1,\r\n        fenceId: i + 1,\r\n        fenceName: i + 1\r\n      })\r\n    }\r\n    // this.getAllUserFro()\r\n    // console.log('!!!!!!!!!!!!!')\r\n  },\r\n  mounted() {\r\n    this.tableWidth = document.body.scrollWidth - 259 - 20\r\n  },\r\n  methods: {\r\n    /** ********************************* 页面处理数据格式等函数 ************************************************ */\r\n    // 分页页面跳转时\r\n    handleCurrentChange(val) {\r\n      this.filterForm.currentPage = val\r\n      this.getUserGroupFro(this.filterForm.currentPage)\r\n    },\r\n    // 分页页面跳转时\r\n    handleEditUserCurrentChange(val) {\r\n      this.editForm.currentUserPage = val\r\n      this.getUserFro(this.editForm.currentUserPage)\r\n    },\r\n    // 分页页面跳转时\r\n    handleEditFenceCurrentChange(val) {\r\n      this.editForm.currentFencePage = val\r\n      this.getFenceFro(this.editForm.currentFencePage)\r\n    },\r\n    // 分页页面跳转时\r\n    handleAddUserCurrentChange(val) {\r\n      this.addForm.currentUserPage = val\r\n      this.getUserFro(this.addForm.currentUserPage)\r\n    },\r\n    // 分页页面跳转时\r\n    handleAddFenceCurrentChange(val) {\r\n      this.addForm.currentFencePage = val\r\n      this.getFenceFro(this.addForm.currentFencePage)\r\n    },\r\n    // 编辑用户组弹窗-添加用户表格多选\r\n    handleUserSelectionChange(val) {\r\n      this.multipleUserSelection = val\r\n    },\r\n    // 编辑用户组弹窗-添加围栏表格多选\r\n    handleFenceSelectionChange(val) {\r\n      this.multipleFenceSelection = val\r\n    },\r\n    handleAddUser(form) {\r\n      this.addUser = true\r\n      this.multipleUserSelection = []\r\n      this.form = form\r\n    },\r\n    handleAddFence(form) {\r\n      this.addFence = true\r\n      this.multipleFenceSelection = []\r\n      this.form = form\r\n    },\r\n    // 设置表头样式\r\n    tableHeaderClassName({ row, column, rowIndex, columnIndex }) {\r\n      if (rowIndex === 0) {\r\n        return 'headerClass'\r\n      }\r\n    },\r\n    // 设置表格每一行样式\r\n    tableRowClassName({ row, rowIndex }) {\r\n      return 'rowClass'\r\n    },\r\n    // 点击表格中的“编辑”按钮\r\n    handleEdit(index, row) {\r\n      const data = this.filterFormFro.tableData[index]\r\n      this.editForm.oldGroupName = data.groupName\r\n      this.editForm.groupId = data.groupId\r\n      this.editForm.description = row.description\r\n      this.editForm.groupName = row.groupName\r\n      this.editForm.adminId = row.adminId\r\n      this.editForm.adminName = row.adminName\r\n      // this.getFenceFro()\r\n      // this.getUserFro()\r\n      this.editVisable = true\r\n    },\r\n    // 点击表格中的“删除”按钮\r\n    handleDelete(index, row) {\r\n      const data = this.filterFormFro.tableData[index]\r\n      this.deleteForm.groupId = data.groupId\r\n      this.$confirm('确定删除该信息吗?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.deleteUserGroupFro()\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        })\r\n      })\r\n    },\r\n    // 编辑页面-点击用户表格中的“删除”按钮\r\n    handleEditUserDelete(index, row) {\r\n      this.editForm.userData.splice(index, 1)\r\n    },\r\n    // 添加页面-点击用户表格中的“删除”按钮\r\n    handleAddUserDelete(index, row) {\r\n      this.addForm.userData.splice(index, 1)\r\n    },\r\n    // 添加页面-点击围栏表格中的“删除”按钮\r\n    handleAddFenceDelete(index, row) {\r\n      this.addForm.fenceData.splice(index, 1)\r\n    },\r\n    // 编辑页面-点击围栏表格中的“删除”按钮\r\n    handleEditFenceDelete(index, row) {\r\n      this.editForm.fenceData.splice(index, 1)\r\n    },\r\n    // 重置表单\r\n    resetError(formName) {\r\n      this.$nextTick(function() {\r\n        this.$refs[formName].resetFields()\r\n      })\r\n    },\r\n    // 重置表单\r\n    resetForm(formName) {\r\n      this.$nextTick(function() {\r\n        this.$refs[formName].resetFields()\r\n      })\r\n    },\r\n    // 将时间转化为字符串(filterForm)\r\n    formatDayFro(now) {\r\n      var year = now.getFullYear()\r\n      var month = now.getMonth() + 1\r\n      month = month < 10 ? '0' + month : month\r\n      var date = now.getDate()\r\n      date = date < 10 ? ('0' + date) : date\r\n      var hour = now.getHours()\r\n      hour = hour < 10 ? ('0' + hour) : hour\r\n      var minute = now.getMinutes()\r\n      minute = minute < 10 ? ('0' + minute) : minute\r\n      var second = now.getSeconds()\r\n      second = second < 10 ? ('0' + second) : second\r\n      return year + '-' + month + '-' + date + ' ' + hour + ':' + minute + ':' + second\r\n    },\r\n    handleChange(value, direction, movedKeys) {\r\n      console.log(value, direction, movedKeys)\r\n    },\r\n    // 编辑用户组信息，点击“保存”\r\n    submitEdit() {\r\n      this.$refs['editForm'].validate((valid) => {\r\n        if (valid) {\r\n          this.editUserGroupFro()\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 添加用户组信息，点击“保存”\r\n    submitAdd() {\r\n      this.$refs['addForm'].validate((valid) => {\r\n        if (valid) {\r\n          this.addUserGroupFro()\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 编辑用户组信息-添加用户，点击“保存”\r\n    submitUserAdd() {\r\n      this.$refs['editForm'].validate((valid) => {\r\n        if (valid) {\r\n          this.editUserGroupFro()\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 编辑用户组信息-添加新用户到用户组，点击“保存”\r\n    submitUserAddToGroup() {\r\n      this.$refs[this.form].validate((valid) => {\r\n        if (valid) {\r\n          this.addUserToGroup(this.form)\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 编辑用户组信息-添加新围栏到用户组，点击“保存”\r\n    submitFenceAddToGroup() {\r\n      this.$refs[this.form].validate((valid) => {\r\n        if (valid) {\r\n          this.addFenceToGroup(this.form)\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 管理员下拉列表\r\n    adminRemoteMethod(query) {\r\n      if (query !== '') {\r\n        userapi.getAllAdmin({}).then(res => {\r\n          if (res.data.result === 1000) {\r\n            const data = res.data.content\r\n            if (data.list.length > 0) {\r\n              this.adminOptions = data.list\r\n            }\r\n          } else {\r\n            this.$message.error(res.resultDesp)\r\n          }\r\n        }).catch(error => {\r\n          this.$message.error(error)\r\n        })\r\n      }\r\n    },\r\n    getAdminId(form) {\r\n      for (let i = 0; i < this.adminOptions.length; i++) {\r\n        if (this[form].adminName === this.adminOptions[i].adminName) {\r\n          this[form].adminId = this.adminOptions[i].adminId\r\n          break\r\n        }\r\n      }\r\n    },\r\n    /** ***************************** 向后台发送请求 ***************************************** */\r\n    // 查询用户组信息\r\n    getUserGroupFro(pageNum) {\r\n      this.loading = true\r\n      const para = {\r\n        pageSize: 15,\r\n        pageNum: parseInt(this.filterForm.currentPage)\r\n      }\r\n      pageNum ? this.filterForm.currentPage = pageNum : this.filterForm.currentPage = 1\r\n      if (this.filterForm.queryCondition && this.filterForm.queryContent !== '') {\r\n        if (this.filterForm.queryCondition === '1') {\r\n          para.groupId = parseInt(this.filterForm.queryContent)\r\n        } else {\r\n          para.groupName = this.filterForm.queryContent\r\n        }\r\n      } else {\r\n        para.groupId = null\r\n        para.groupName = null\r\n      }\r\n      userapi.getUserGroup(para).then(res => {\r\n        this.filterFormFro.tableData = []\r\n        this.loading = false\r\n        if (res.data.result === 1000) {\r\n          const data = res.data.content\r\n          data.allPages > 1 ? this.paginationVisible = true : this.paginationVisible = false\r\n          if (data.list.length > 0) {\r\n            this.filterFormFro.tableData = data.list\r\n            // this.filterFormFro.totalCount = data.allCount\r\n            for (let i = 0; i < this.filterFormFro.tableData.length; i++) {\r\n              this.filterFormFro.tableData[i].index = (this.filterForm.currentPage - 1) * 15 + i + 1\r\n            }\r\n          } else {\r\n            this.$message.warning('没有查到任何用户组信息')\r\n          }\r\n        } else {\r\n          this.$message.error(res.resultDesp)\r\n        }\r\n      }).catch(error => {\r\n        this.loading = false\r\n        this.$message.error(error)\r\n      })\r\n    },\r\n    // 查询用户组的用户信息\r\n    getUserFro(pageNum) {\r\n      const para = {\r\n        // pageSize: 15,\r\n        // pageNum: parseInt(this.editForm.currentUserPage),\r\n        userGroupId: this.editForm.userGroupId\r\n      }\r\n      pageNum ? this.editForm.userCurrentPage = pageNum : this.editForm.userCurrentPage = 1\r\n      userapi.getUser(para).then(res => {\r\n        this.editForm.userData = []\r\n        this.loading = false\r\n        if (res.result === 1000) {\r\n          const data = res.content\r\n          data.allPages > 1 ? this.userPaginationVisible = true : this.userPaginationVisible = false\r\n          if (data.list.length > 0) {\r\n            this.testData = data.list\r\n            this.editForm.userData = data.list\r\n            this.editForm.totalUserCount = data.allCount\r\n            for (let i = 0; i < this.editForm.userData.length; i++) {\r\n              // this.editForm.userData[i].index = (this.editForm.currentUserPage - 1) * 15 + i + 1\r\n              this.editForm.userData[i].index = i + 1\r\n            }\r\n          } else {\r\n            this.$message.warning('没有查到任何用户信息')\r\n          }\r\n        } else {\r\n          this.$message.error(res.resultDesp)\r\n        }\r\n      }).catch(error => {\r\n        this.$message.error(error)\r\n      })\r\n    },\r\n    // 查询所有用户信息\r\n    getAllUserFro() {\r\n      const para = {\r\n        // pageSize: 15,\r\n        // pageNum: parseInt(this.editForm.currentUserPage),\r\n        userId: this.userForm.userId,\r\n        userName: this.userForm.userName\r\n      }\r\n      console.log(para)\r\n      // userapi.getUser(para).then(res => {\r\n      //   if (res.result === 1000) {\r\n      //     data = res.content.list\r\n      //     this.userForm.userData = res.content.list\r\n      //   }\r\n      // })\r\n    },\r\n    // 查询用户组的围栏信息\r\n    getFenceFro(pageNum) {\r\n      this.loading = true\r\n      const para = {\r\n        pageSize: 5,\r\n        pageNum: parseInt(this.editForm.currentFencePage)\r\n      }\r\n      pageNum ? this.editForm.currentFencePage = pageNum : this.editForm.currentFencePage = 1\r\n      para.groupName = this.editForm.groupName\r\n      console.log('表格查询围栏')\r\n      console.log(para)\r\n      api.getFence(para).then(res => {\r\n        this.editForm.fenceData = []\r\n        if (res.result === 1000) {\r\n          const data = res.content\r\n          data.allPages > 1 ? this.fencePaginationVisible = true : this.fencePaginationVisible = false\r\n          if (data.list.length > 0) {\r\n            this.editForm.fenceData = data.list\r\n            this.editForm.totalFenceCount = data.allCount\r\n            for (let i = 0; i < this.editForm.fenceData.length; i++) {\r\n              this.editForm.fenceData[i].index = (this.editForm.currentFencePage - 1) * 15 + i + 1\r\n            }\r\n          } else {\r\n            this.$message.warning('没有查到任何围栏信息')\r\n          }\r\n        } else {\r\n          this.$message.error(res.resultDesp)\r\n        }\r\n      }).catch(error => {\r\n        this.$message.error(error)\r\n      })\r\n    },\r\n    // 查询所有围栏信息\r\n    getAllFenceFro() {\r\n      const para = {\r\n        pageSize: 15,\r\n        pageNum: parseInt(this.editForm.currentFencePage),\r\n        fenceId: this.fenceForm.fenceId,\r\n        fenceName: this.fenceForm.fenceName\r\n      }\r\n      console.log(para)\r\n      // api.getFence(para).then(res => {\r\n      //   if (res.result === 1000) {\r\n      //     data = res.content.list\r\n      //     this.fenceForm.fenceData = res.content.list\r\n      //   }\r\n      // })\r\n    },\r\n    // 编辑用户组信息\r\n    editUserGroupFro() {\r\n      const para = {\r\n        description: this.editForm.description,\r\n        groupName: this.editForm.groupName,\r\n        oldGroupName: this.editForm.oldGroupName,\r\n        groupId: this.editForm.groupId,\r\n        adminId: this.editForm.adminId,\r\n        adminName: this.editForm.adminName,\r\n        fenceSet: [],\r\n        userSet: []\r\n      }\r\n      var fenceName = new Set()\r\n      var userName = new Set()\r\n      for (let i = 0; i < this.editForm.fenceData.length; i++) {\r\n        fenceName.add(this.editForm.fenceData[i].fenceId)\r\n        userName.add(this.editForm.userData[i].userId)\r\n      }\r\n      para.fenceSet = fenceName\r\n      para.userSet = userName\r\n      console.log(para)\r\n      userapi.editUserGroup(para).then(res => {\r\n        if (res.result === 1000) {\r\n          this.editVisable = false\r\n          this.$message.success('编辑用户组信息成功')\r\n          this.getUserGroupFro()\r\n        } else {\r\n          this.$message.warning(res.resultDesp)\r\n        }\r\n      }).catch(error => {\r\n        this.editVisable = false\r\n        this.$message.error(error)\r\n      })\r\n    },\r\n    // 添加用户组信息\r\n    addUserGroupFro() {\r\n      const para = {\r\n        description: this.addForm.description,\r\n        groupName: this.addForm.groupName,\r\n        adminId: parseInt('1'),\r\n        adminName: 'admin',\r\n        fenceSet: [],\r\n        userSet: []\r\n      }\r\n      var fenceName = new Set()\r\n      var userName = new Set()\r\n      for (let i = 0; i < this.addForm.userData.length; i++) {\r\n        userName.add(this.addForm.userData[i].userId)\r\n      }\r\n      for (let i = 0; i < this.addForm.fenceData.length; i++) {\r\n        fenceName.add(this.addForm.fenceData[i].fenceId)\r\n      }\r\n      para.fenceSet = fenceName\r\n      para.userSet = userName\r\n      console.log(para)\r\n      // userapi.addUserGroup(para).then(res => {\r\n      //   if (res.result === 1000) {\r\n      //     this.addVisable = false\r\n      //     this.$message.success('添加用户组信息成功')\r\n      //     this.getUserGroupFro()\r\n      //   } else {\r\n      //     this.$message.warning(res.resultDesp)\r\n      //   }\r\n      // }).catch(error => {\r\n      //   this.editVisable = false\r\n      //   this.$message.error(error)\r\n      // })\r\n    },\r\n    // 添加用户到用户组并刷新弹出框中的用户表格，去重\r\n    addUserToGroup(form) {\r\n      const length = this[form].userData.length\r\n      console.log('用户多选')\r\n      console.log(this.multipleUserSelection)\r\n      console.log(this.addForm.userData)\r\n      for (let i = 0; i < this.multipleUserSelection.length; i++) {\r\n        for (let j = 0; j < this.userForm.userData.length; j++) {\r\n          if (this.multipleUserSelection[i].index === this.userForm.userData[j].index) {\r\n            this[form].userData.push({\r\n              index: length + i + 1,\r\n              userId: this.userForm.userData[j].userId,\r\n              userName: this.userForm.userData[j].userName\r\n            })\r\n          }\r\n        }\r\n      }\r\n      this.multipleUserSelection = []\r\n      this.addUser = false\r\n    },\r\n    // 添加围栏到用户组并刷新弹出框中的用户表格，去重\r\n    addFenceToGroup(form) {\r\n      const length = this[form].fenceData.length\r\n      for (let i = 0; i < this.multipleFenceSelection.length; i++) {\r\n        for (let j = 0; j < this.fenceForm.fenceData.length; j++) {\r\n          if (this.multipleFenceSelection[i].index === this.fenceForm.fenceData[j].index) {\r\n            this[form].fenceData.push({\r\n              index: length + i + 1,\r\n              fenceId: this.fenceForm.fenceData[j].fenceId,\r\n              fenceName: this.fenceForm.fenceData[j].fenceName,\r\n              fenceDes: this.fenceForm.fenceData[j].fenceDes\r\n            })\r\n          }\r\n        }\r\n      }\r\n      this.multipleFenceSelection = []\r\n      this.addFence = false\r\n    },\r\n    // 硬件信息-删除用户组信息\r\n    deleteUserGroupFro() {\r\n      const para = {\r\n        groupId: parseInt(this.deleteForm.groupId)\r\n      }\r\n      console.log(para)\r\n      userapi.deleteUserGroup(para).then(res => {\r\n        if (res.result === 1000) {\r\n          this.deleteVisable = false\r\n          this.$message.success('删除用户组信息成功')\r\n          this.getUserGroupFro()\r\n        } else {\r\n          this.$message.warning(res.resultDesp)\r\n        }\r\n      }).catch(error => {\r\n        this.deleteVisable = false\r\n        this.$message.error(error)\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}