{"remainingRequest":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/biyue/Documents/LanHuo/LanHuo-biyue/src/views/nested/deviceMana/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/src/views/nested/deviceMana/index.vue","mtime":1557731454691},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo/LanHuo-biyue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// import userapi from '../api/userAbout/api.js'\r\nimport api from '@/api/hardware/api.js'\r\n// import '../../static/css/gateMana/common.css'\r\n// import '../../static/css/gateMana/dianziweilan.css'\r\nexport default {\r\n  created () {\r\n    console.log('!!!!!!!!!!!!!')\r\n    this.getDeviceFro()\r\n    this.typeRemoteMethod()\r\n    // this.fenceRemoteMethod()\r\n    this.adminRemoteMethod()\r\n  },\r\n  data () {\r\n    return {\r\n      testData: [],\r\n      filterFormFro: {\r\n        tableData: [],\r\n        totalCount: 0\r\n      },\r\n      filterForm: {\r\n        queryCondition: '',\r\n        queryContent: '',\r\n        currentPage: 1\r\n      },\r\n      editForm: {\r\n        deviceId: '',\r\n        deviceName: '',\r\n        oldDeviceName: '',\r\n        deviceTypeName: '',\r\n        fenceId: '',\r\n        adminName: '',\r\n        phone: ''\r\n      },\r\n      addForm: {\r\n        deviceName: '',\r\n        deviceTypeName: '',\r\n        fenceId: '',\r\n        adminName: '',\r\n        phone: ''\r\n      },\r\n      tableWidth: '', // 表格宽度\r\n      loadingText: '正在拼命加载中，请稍等......',\r\n      loading: false,\r\n      paginationVisible: true, // 表格下方的分页显示\r\n      formLabelWidth: '150px',\r\n      deleteForm: {\r\n        userId: ''\r\n      },\r\n      list: [],\r\n      states: [],\r\n      options: [{\r\n        value: '1',\r\n        label: '设备ID'\r\n      }, {\r\n        value: '2',\r\n        label: '设备名称'\r\n      }, {\r\n        value: '3',\r\n        label: '设备类型名称'\r\n      }],\r\n      typeOptions: [],\r\n      fenceOptions: [],\r\n      adminOptions: [],\r\n      fileList: [],\r\n      multipleSelection: [],\r\n      withCredentials: true,\r\n      processing: false,\r\n      uploadTip: '点击上传',\r\n      importFlag: 1,\r\n      show: false,\r\n      addVisable: false,\r\n      editVisable: false,\r\n      dialogImportVisible: false,\r\n      errorResults: []\r\n    }\r\n  },\r\n  methods: {\r\n    /** ********************************* 页面处理数据格式等函数 ************************************************ */\r\n    // 分页页面跳转时\r\n    handleCurrentChange (val) {\r\n      this.filterForm.currentPage = val\r\n      this.getDeviceFro(this.filterForm.currentPage)\r\n    },\r\n    // 设置表头样式\r\n    tableHeaderClassName ({row, column, rowIndex, columnIndex}) {\r\n      if (rowIndex === 0) {\r\n        return 'headerClass'\r\n      }\r\n    },\r\n    // 设置表格每一行样式\r\n    tableRowClassName ({row, rowIndex}) {\r\n      return 'rowClass'\r\n    },\r\n    // 点击表格中的“删除”按钮\r\n    handleDelete (index, row) {\r\n      let data = this.filterFormFro.tableData[index]\r\n      this.deleteForm.deviceId = data.deviceId\r\n      this.$confirm('确定删除该信息吗?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.deleteDeviceFro()\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        })\r\n      })\r\n    },\r\n    handleEdit (index, row) {\r\n      let data = this.filterFormFro.tableData[index]\r\n      this.editForm.deviceName = row.deviceName\r\n      this.editForm.oldDeviceName = data.deviceName\r\n      this.editForm.deviceTypeName = row.deviceTypeName\r\n      this.editForm.deviceId = row.deviceId\r\n      this.editForm.fenceId = row.fenceId\r\n      this.editForm.phone = row.phone\r\n      this.editForm.adminName = row.adminName\r\n      this.editVisable = true\r\n    },\r\n    // 重置表单\r\n    resetError (formName) {\r\n      this.$nextTick(function () {\r\n        this.$refs[formName].resetFields()\r\n      })\r\n    },\r\n    // 重置表单\r\n    resetForm (formName) {\r\n      this.$nextTick(function () {\r\n        this.$refs[formName].resetFields()\r\n      })\r\n    },\r\n    // 将时间转化为字符串(filterForm)\r\n    formatDayFro (now) {\r\n      var year = now.getFullYear()\r\n      var month = now.getMonth() + 1\r\n      month = month < 10 ? '0' + month : month\r\n      var date = now.getDate()\r\n      date = date < 10 ? ('0' + date) : date\r\n      var hour = now.getHours()\r\n      hour = hour < 10 ? ('0' + hour) : hour\r\n      var minute = now.getMinutes()\r\n      minute = minute < 10 ? ('0' + minute) : minute\r\n      var second = now.getSeconds()\r\n      second = second < 10 ? ('0' + second) : second\r\n      return year + '-' + month + '-' + date + ' ' + hour + ':' + minute + ':' + second\r\n    },\r\n    // 增加设备信息，点击“保存”\r\n    submitAdd () {\r\n      this.$refs['addForm'].validate((valid) => {\r\n        if (valid) {\r\n          this.addDeviceFro()\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 编辑设备信息，点击“保存”\r\n    submitEdit () {\r\n      this.$refs['editForm'].validate((valid) => {\r\n        if (valid) {\r\n          this.editDeviceFro()\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    /** ***************************** 向后台发送请求 ***************************************** */\r\n    // 下拉列表,已存在的设备类型\r\n    typeRemoteMethod (query) {\r\n      if (query !== '') {\r\n        api.getDeviceType({}).then(res => {\r\n          if (res.result === 1000) {\r\n            let data = res.content\r\n            if (data.list.length > 0) {\r\n              this.typeOptions = data.list\r\n            }\r\n          } else {\r\n            this.$message.error(res.resultDesp)\r\n          }\r\n        }).catch(error => {\r\n          this.$message.error(error)\r\n        })\r\n      }\r\n    },\r\n     // 下拉列表,已存在的电子围栏\r\n    fenceRemoteMethod (query) {\r\n      if (query !== '') {\r\n        api.getDeviceTypeID({}).then(res => {\r\n          this.filterFormFro.tableData = []\r\n          if (res.result === 1000) {\r\n            let data = res.content\r\n            if (data.list.length > 0) {\r\n              this.fenceOptions = data.list\r\n            }\r\n          } else {\r\n            this.$message.error(res.resultDesp)\r\n          }\r\n        }).catch(error => {\r\n          this.$message.error(error)\r\n        })\r\n      }\r\n    },\r\n     // 管理员下拉列表\r\n    // adminRemoteMethod (query) {\r\n    //   if (query !== '') {\r\n    //     userapi.getAllAdmin({}).then(res => {\r\n    //       this.filterFormFro.tableData = []\r\n    //       if (res.data.result === 1000) {\r\n    //         let data = res.data.content\r\n    //         if (data.list.length > 0) {\r\n    //           this.adminOptions = data.list\r\n    //         }\r\n    //       } else {\r\n    //         this.$message.error(res.resultDesp)\r\n    //       }\r\n    //     }).catch(error => {\r\n    //       this.$message.error(error)\r\n    //     })\r\n    //   }\r\n    // },\r\n    // 查询设备信息\r\n    getDeviceFro (pageNum) {\r\n      this.loading = true\r\n      let para = {\r\n        pageSize: 15,\r\n        pageNum: parseInt(this.filterForm.currentPage)\r\n      }\r\n      pageNum ? this.filterForm.currentPage = pageNum : this.filterForm.currentPage = 1\r\n      if (this.filterForm.queryCondition && this.filterForm.queryContent !== '') {\r\n        if (this.filterForm.queryCondition === '1') {\r\n          para.deviceId = parseInt(this.filterForm.queryContent)\r\n        } else if (this.filterForm.queryCondition === '2') {\r\n          para.deviceName = this.filterForm.queryContent\r\n        } else if (this.filterForm.queryCondition === '3') {\r\n          para.deviceTypeName = this.filterForm.queryContent\r\n        }\r\n      } else {\r\n        para.deviceId = null\r\n        para.deviceName = null\r\n        para.deviceTypeName = null\r\n      }\r\n      para.pageNum = this.filterForm.currentPage\r\n      // console.log(para)\r\n      api.getDevice(para).then(res => {\r\n        this.filterFormFro.tableData = []\r\n        this.loading = false\r\n        if (res.result === 1000) {\r\n          let data = res.content\r\n          data.allPages > 1 ? this.paginationVisible = true : this.paginationVisible = false\r\n          if (data.list.length > 0) {\r\n            this.testData = data.list\r\n            this.filterFormFro.tableData = data.list\r\n            this.filterFormFro.totalCount = data.allCount\r\n            for (let i = 0; i < this.filterFormFro.tableData.length; i++) {\r\n              this.filterFormFro.tableData[i].index = (this.filterForm.currentPage - 1) * 15 + i + 1\r\n            }\r\n          } else {\r\n            this.$message.warning('没有查到任何设备信息')\r\n          }\r\n        } else {\r\n          this.$message.error(res.resultDesp)\r\n        }\r\n      }).catch(error => {\r\n        this.loading = false\r\n        this.$message.error(error)\r\n      })\r\n    },\r\n     // 添加设备\r\n    addDeviceFro () {\r\n      let para = {\r\n        deviceName: this.addForm.deviceName,\r\n        deviceTypeId: '',\r\n        deviceTypeName: this.addForm.deviceTypeName,\r\n        fenceId: parseInt('1'),\r\n        // fenceId: parseInt(this.addForm.fenceId),\r\n        fenceName: '',\r\n        phone: sessionStorage.getItem('phone'),\r\n        adminId: parseInt(sessionStorage.getItem('adminId')),\r\n        adminName: sessionStorage.getItem('adminName')\r\n      }\r\n      for (let i = 0; i < this.typeOptions.length; i++) {\r\n        if (this.addForm.deviceTypeName === this.typeOptions[i].deviceTypeName) {\r\n          para.deviceTypeId = parseInt(this.typeOptions[i].deviceTypeId)\r\n          break\r\n        }\r\n      }\r\n      for (let i = 0; i < this.fenceOptions.length; i++) {\r\n        if (this.addForm.fenceId === this.fenceOptions[i].fenceId) {\r\n          para.fenceName = this.fenceOptions[i].fenceName\r\n          break\r\n        }\r\n      }\r\n      console.log('添加设备')\r\n      console.log(para)\r\n      // api.addDevice(para).then(res => {\r\n      //   if (res.result === 1000) {\r\n      //     this.addVisable = false\r\n      //     this.$message.success('添加设备信息成功')\r\n      //     this.getDeviceFro()\r\n      //   } else {\r\n      //     this.$message.warning(res.resultDesp)\r\n      //   }\r\n      // }).catch(error => {\r\n      //   this.editVisable = false\r\n      //   this.$message.error(error)\r\n      // })\r\n    },\r\n    // 编辑设备信息\r\n    editDeviceFro () {\r\n      let para = {\r\n        deviceName: this.editForm.deviceName,\r\n        oldDeviceName: this.editForm.oldDeviceName,\r\n        deviceId: parseInt(this.editForm.deviceId),\r\n        deviceTypeId: '',\r\n        deviceTypeName: this.editForm.deviceTypeName,\r\n        fenceId: parseInt(1),\r\n        // fenceId: parseInt(this.editForm.fenceId),\r\n        fenceName: this.editForm.fenceName,\r\n        phone: sessionStorage.getItem('phone'),\r\n        adminId: parseInt(sessionStorage.getItem('adminId')),\r\n        adminName: sessionStorage.getItem('adminName')\r\n      }\r\n      for (let i = 0; i < this.typeOptions.length; i++) {\r\n        if (this.editForm.deviceTypeName === this.typeOptions[i].deviceTypeName) {\r\n          para.deviceTypeId = this.typeOptions[i].deviceTypeId\r\n          break\r\n        }\r\n      }\r\n      for (let i = 0; i < this.fenceOptions.length; i++) {\r\n        if (this.editForm.fenceId === this.fenceOptions[i].fenceId) {\r\n          para.fenceName = this.fenceOptions[i].fenceName\r\n          break\r\n        }\r\n      }\r\n      console.log(para)\r\n      api.editDevice(para).then(res => {\r\n        if (res.result === 1000) {\r\n          this.editVisable = false\r\n          this.$message.success('编辑设备信息成功')\r\n          this.getDeviceFro()\r\n        } else {\r\n          this.$message.warning(res.resultDesp)\r\n        }\r\n      }).catch(error => {\r\n        this.editVisable = false\r\n        this.$message.error(error)\r\n      })\r\n    },\r\n    // 删除设备信息\r\n    deleteDeviceFro () {\r\n      let para = {\r\n        deviceId: this.deleteForm.deviceId\r\n      }\r\n      console.log(para)\r\n      api.deleteDevice(para).then(res => {\r\n        if (res.result === 1000) {\r\n          this.deleteVisable = false\r\n          this.$message.success('删除设备信息成功')\r\n          this.getDeviceFro()\r\n        } else {\r\n          this.$message.warning(res.resultDesp)\r\n        }\r\n      }).catch(error => {\r\n        this.deleteVisable = false\r\n        this.$message.error(error)\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    this.tableWidth = document.body.scrollWidth - 259 - 20\r\n  }\r\n}\r\n",null]}