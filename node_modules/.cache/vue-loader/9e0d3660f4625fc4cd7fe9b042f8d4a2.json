{"remainingRequest":"/Users/biyue/Documents/LanHuo-biyue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/biyue/Documents/LanHuo-biyue/src/views/zhangyilei/experienceshow.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/biyue/Documents/LanHuo-biyue/src/views/zhangyilei/experienceshow.vue","mtime":1557820456260},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from \"axios\";\r\nimport echarts from \"echarts\";\r\nexport default {\r\n  mounted: function() {\r\n    this.fetchdata();\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      list: [],\r\n      input:''\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    handleSelect(key, keyPath) {\r\n      console.log(this);\r\n      console.log(key, keyPath);\r\n    },\r\n    initbar() {\r\n      let myChart = echarts.init(document.getElementById(\"chart\"));\r\n      let option = {\r\n        color: [\"#f44\"],\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\"\r\n          }\r\n        },\r\n        \r\n        xAxis: [\r\n          {\r\n            name: \"用户ID\",\r\n            type: \"category\",\r\n            // data: [this.list[0].userID, this.list[1].userID],\r\n            data: [\r\n              this.list[0].userID,\r\n              this.list[1].userID,\r\n              this.list[2].userID,\r\n              this.list[3].userID,\r\n              this.list[4].userID,\r\n              this.list[5].userID,\r\n              this.list[6].userID,\r\n              this.list[7].userID,\r\n              this.list[8].userID,\r\n              this.list[9].userID\r\n            ],\r\n            axisTick: {\r\n              alignWithLabel: true\r\n            }\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            name: \"经验值\",\r\n            type: \"value\"\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: \"经验值\",\r\n            type: \"bar\",\r\n            barWidth: \"60%\",\r\n            // data: [this.list[0].empiricalValue, this.list[1].empiricalValue]\r\n            data: [\r\n              this.list[0].empiricalValue,\r\n              this.list[1].empiricalValue,\r\n              this.list[2].empiricalValue,\r\n              this.list[3].empiricalValue,\r\n              this.list[4].empiricalValue,\r\n              this.list[5].empiricalValue,\r\n              this.list[6].empiricalValue,\r\n              this.list[7].empiricalValue,\r\n              this.list[8].empiricalValue\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n      myChart.setOption(option);\r\n    },\r\n    fetchdata() {\r\n      axios\r\n        .post(\r\n          \"http://112.74.189.126:8080/bluefire/Integererface/analysis/getEmpiricalandIntegererest\",\r\n          {\r\n            startDate: \"2000-1-1\",\r\n            endDate: \"2019-1-1\"\r\n          }\r\n        )\r\n        .then(response => {\r\n          // 请求成功以后的回调函数\r\n          console.log(response);\r\n          this.list = response.data.content.empiricalList;\r\n\r\n          for (var i = 0; i < this.list.length; i++) {\r\n            this.list[i].empiricalValue =\r\n              parseFloat(this.list[i].empiricalValue).toFixed(2) * 100;\r\n            this.tableData.push({\r\n              rank: i + 1,\r\n              userID: this.list[i].userID,\r\n              empiricalValue: this.list[i].empiricalValue\r\n            });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          // 请求失败以后的回调函数\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n};\r\n",null]}