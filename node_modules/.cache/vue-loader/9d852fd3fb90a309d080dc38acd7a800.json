{"remainingRequest":"/Users/biyue/Documents/LanHuo-biyue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/biyue/Documents/LanHuo-biyue/src/views/nested/fenceCreate/fenceCreateInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/biyue/Documents/LanHuo-biyue/src/views/nested/fenceCreate/fenceCreateInfo.vue","mtime":1557176484000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport api from '@/api/hardware/api.js'\r\nimport userapi from '@/api/userAbout/api.js'\r\n// import '../../static/css/gateMana/common.css'\r\n// import '../../static/css/gateMana/dianziweilan.css'\r\nexport default {\r\n  created () {\r\n    this.points = this.$route.params.shape\r\n    this.groupRemoteMethod()\r\n    this.conditionRemoteMethod()\r\n    this.adminRemoteMethod()\r\n    console.log('经纬度：')\r\n    console.log(this.points)\r\n  },\r\n  data () {\r\n    return {\r\n      testData: [],\r\n      addForm: {\r\n        fenceName: '',\r\n        fenceDes: '',\r\n        groupName: '',\r\n        groupId: '',\r\n        conditionId: '',\r\n        conditionName: '',\r\n        alarmId: '',\r\n        alarmName: '',\r\n        workTime: [],\r\n        attendanceAdmin: []\r\n      },\r\n      pickerOptions: {\r\n        shortcuts: [{\r\n          text: '最近一周',\r\n          onClick (picker) {\r\n            const end = new Date()\r\n            const start = new Date()\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\r\n            picker.$emit('pick', [start, end])\r\n          }\r\n        }, {\r\n          text: '最近一个月',\r\n          onClick (picker) {\r\n            const end = new Date()\r\n            const start = new Date()\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\r\n            picker.$emit('pick', [start, end])\r\n          }\r\n        }, {\r\n          text: '最近三个月',\r\n          onClick (picker) {\r\n            const end = new Date()\r\n            const start = new Date()\r\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\r\n            picker.$emit('pick', [start, end])\r\n          }\r\n        }]\r\n      },\r\n      loadingText: '正在拼命加载中，请稍等......]',\r\n      loading: false,\r\n      paginationVisible: true, // 表格下方的分页显示\r\n      formLabelWidth: '150px',\r\n      list: [],\r\n      states: [],\r\n      points: [],\r\n      adminList: [''],\r\n      alarmList: [''],\r\n      conditionList: [''],\r\n      conditionPara: [],\r\n      alarmPara: [],\r\n      workTimeList: [''],\r\n      groupOptions: [],\r\n      fenceOptions: [],\r\n      adminOptions: [],\r\n      conditionOptions: [],\r\n      alarmOptions: [],\r\n      fileList: [],\r\n      multipleSelection: [],\r\n      withCredentials: true,\r\n      processing: false,\r\n      uploadTip: '点击上传',\r\n      importFlag: 1,\r\n      addVisable: false,\r\n      editVisable: false,\r\n      dialogImportVisible: false,\r\n      errorResults: []\r\n    }\r\n  },\r\n  methods: {\r\n    /** ********************************* 页面处理数据格式等函数 ************************************************ */\r\n    // 重置表单\r\n    resetError (formName) {\r\n      this.$nextTick(function () {\r\n        this.$refs[formName].resetFields()\r\n      })\r\n    },\r\n    // 重置表单\r\n    resetForm (formName) {\r\n      this.$nextTick(function () {\r\n        this.$refs[formName].resetFields()\r\n      })\r\n    },\r\n    // 将时间转化为字符串(filterForm)\r\n    formatDayFro (now) {\r\n      var year = now.getFullYear()\r\n      var month = now.getMonth() + 1\r\n      month = month < 10 ? '0' + month : month\r\n      var date = now.getDate()\r\n      date = date < 10 ? ('0' + date) : date\r\n      var hour = now.getHours()\r\n      hour = hour < 10 ? ('0' + hour) : hour\r\n      var minute = now.getMinutes()\r\n      minute = minute < 10 ? ('0' + minute) : minute\r\n      var second = now.getSeconds()\r\n      second = second < 10 ? ('0' + second) : second\r\n      return year + '-' + month + '-' + date + ' ' + hour + ':' + minute + ':' + second\r\n    },\r\n    // 将时间转化为字符串(filterForm)\r\n    formatDateFro (now) {\r\n      var year = now.getFullYear()\r\n      var month = now.getMonth() + 1\r\n      month = month < 10 ? '0' + month : month\r\n      var date = now.getDate()\r\n      date = date < 10 ? ('0' + date) : date\r\n      return year + '-' + month + '-' + date\r\n    },\r\n     // 将时间转化为字符串(filterForm)\r\n    formatTimeFro (now) {\r\n      var hour = now.getHours()\r\n      hour = hour < 10 ? ('0' + hour) : hour\r\n      var minute = now.getMinutes()\r\n      minute = minute < 10 ? ('0' + minute) : minute\r\n      var second = now.getSeconds()\r\n      second = second < 10 ? ('0' + second) : second\r\n      return hour + ':' + minute + ':' + second\r\n    },\r\n     // 增加电子签到信息，点击“保存”\r\n    submitAdd () {\r\n      this.$refs['addForm'].validate((valid) => {\r\n        if (valid) {\r\n          // console.log(this.workTimeList[0][0])\r\n          this.addFenceFro()\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    add () {\r\n      let obj = ''\r\n      this.adminList.push(obj)\r\n    },\r\n    delet (index) {\r\n      this.adminList.splice(index, 1)\r\n    },\r\n    addTime () {\r\n      let obj1 = ''\r\n      this.workTimeList.push(obj1)\r\n      let obj2 = ''\r\n      this.alarmList.push(obj2)\r\n      let obj3 = ''\r\n      this.conditionList.push(obj3)\r\n    },\r\n    deletTime (index) {\r\n      this.workTimeList.splice(index, 1)\r\n      this.alarmList.splice(index, 1)\r\n      this.conditionList.splice(index, 1)\r\n    },\r\n    /** ***************************** 向后台发送请求 ***************************************** */\r\n     // 下拉列表,已存在的用户组\r\n    groupRemoteMethod (query) {\r\n      if (query !== '') {\r\n        userapi.getAllUserGroup({}).then(res => {\r\n          if (res.data.result === 1000) {\r\n            let data = res.data.content\r\n            if (data.list.length > 0) {\r\n              this.groupOptions = data.list\r\n            }\r\n          }\r\n        })\r\n      }\r\n    },\r\n     // 管理员下拉列表\r\n    adminRemoteMethod (query) {\r\n      if (query !== '') {\r\n        userapi.getAllAdmin({}).then(res => {\r\n          if (res.data.result === 1000) {\r\n            let data = res.data.content\r\n            if (data.list.length > 0) {\r\n              this.adminOptions = data.list\r\n            }\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 触发条件下拉列表\r\n    conditionRemoteMethod (query) {\r\n      if (query !== '') {\r\n        api.getAllCondition({}).then(res => {\r\n          if (res.result === 1000) {\r\n            console.log('response is 1000')\r\n            let data = res.content\r\n            if (data.list.length > 0) {\r\n              this.conditionOptions = data.list\r\n              console.log('conditionOptions is:' + this.conditionOptions)\r\n            }\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 创建电子围栏\r\n    addFenceFro () {\r\n      let para = {\r\n        fenceName: this.addForm.fenceName,\r\n        groupName: '1',\r\n        // groupName: this.addForm.groupName,\r\n        fenceDes: this.addForm.fenceDes,\r\n        groupId: '',\r\n        alarms: [],\r\n        // adminId: parseInt(sessionStorage.getItem('adminId')),\r\n        // adminName: sessionStorage.getItem('adminName'),\r\n        adminId: parseInt('1'),\r\n        adminName: 'admin',\r\n        admins: [],\r\n        buildId: '',\r\n        buildName: '',\r\n        mapName: '',\r\n        floor: '',\r\n        points: this.points\r\n      }\r\n      for (let i = 0; i < this.groupOptions.length; i++) {\r\n        if (this.addForm.groupName === this.groupOptions[i].groupName) {\r\n          para.groupId = parseInt(this.groupOptions[i].groupId)\r\n          break\r\n        }\r\n      }\r\n      // for (let i = 0; i < this.alarmList.length; i++) {\r\n      //   for (let j = 0; i < this.alarmOptions.length; j++) {\r\n      //     if (this.alarmList[i] === this.alarmOptions[j].alarmName) {\r\n      //       this.alarmPara.push({\r\n      //         alarmId: this.alarmOptions[j].alarmId,\r\n      //         alarmName: this.alarmOptions[j].alarmName\r\n      //       })\r\n      //       break\r\n      //     }\r\n      //   }\r\n      for (let i = 0; i < this.alarmList.length; i++) {\r\n        this.alarmPara.push({\r\n          alarmId: parseInt('1'),\r\n          alarmName: 'alarmName'\r\n        })\r\n      }\r\n      for (let i = 0; i < this.conditionList.length; i++) {\r\n        this.conditionPara.push({\r\n          conditionId: parseInt('1'),\r\n          conditionName: 'conditionName'\r\n        })\r\n      }\r\n        // for (let j = 0; i < this.conditionOptions.length; j++) {\r\n        //   if (this.conditionList[i] === this.conditionOptions[j].conditionName) {\r\n        //     this.conditionPara.push({\r\n        //       conditionId: this.conditionOptions[j].conditionId,\r\n        //       conditionName: this.conditionOptions[j].conditionName\r\n        //     })\r\n        //     break\r\n        //   }\r\n        // }\r\n      // for (let i = 0; i < this.fenceOptions.length; i++) {\r\n      //   if (this.addForm.fenceName === this.fenceOptions[i].fenceName) {\r\n      //     para.fenceId = parseInt(this.fenceOptions[i].fenceId)\r\n      //     break\r\n      //   }\r\n      // }\r\n      if (this.workTimeList && this.workTimeList.length > 0) {\r\n        for (let i = 0; i < this.workTimeList.length; i++) {\r\n          para.alarms.push({\r\n            startDate: this.formatDateFro(this.workTimeList[i][0]),\r\n            endDate: this.formatDateFro(this.workTimeList[i][1]),\r\n            startTime: this.formatTimeFro(this.workTimeList[i][0]),\r\n            endTime: this.formatTimeFro(this.workTimeList[i][1]),\r\n            alarmId: parseInt(this.alarmPara[i].alarmId),\r\n            alarmName: this.alarmPara[i].alarmName,\r\n            conditionId: parseInt(this.conditionPara[i].conditionId),\r\n            conditionName: this.conditionPara[i].conditionName\r\n          })\r\n        }\r\n      }\r\n      if (this.adminList && this.adminList.length > 0) {\r\n        for (let i = 0; i < this.adminList.length; i++) {\r\n          // para.admins.push({adminId: parseInt(this.adminList[i])})\r\n          para.admins.push(parseInt('1'))\r\n        }\r\n      }\r\n      console.log(para)\r\n      api.addFence(para).then(res => {\r\n        console.log(res)\r\n        if (res.data.result === 1000) {\r\n          this.addVisable = false\r\n          this.$message.success('添加电子围栏信息成功')\r\n        } else {\r\n          this.$message.error(res.resultDesp)\r\n        }\r\n      }).catch(error => {\r\n        this.addVisable = false\r\n        this.$message.error(error)\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}