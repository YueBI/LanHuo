{"remainingRequest":"/Users/biyue/Documents/LanHuo-biyue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/biyue/Documents/LanHuo-biyue/src/views/nested/realTimeTracking/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/biyue/Documents/LanHuo-biyue/src/views/nested/realTimeTracking/index.vue","mtime":1557801906000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/biyue/Documents/LanHuo-biyue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport api from '@/api/hardware/api.js'\r\nexport default {\r\n  created () {\r\n    this.getLocations()\r\n  },\r\n  data () {\r\n    return {\r\n      show: true,\r\n      users: [\r\n        {username: 'peter'},\r\n        {username: 'peter'},\r\n        {username: 'peter'},\r\n        {username: 'peter'},\r\n        {username: 'peter'},\r\n        {username: 'peter'},\r\n        {username: 'peter'},\r\n        {username: 'peter'},\r\n        {username: 'peter'},\r\n        {username: 'peter'}\r\n      ],\r\n      polygonPath: [\r\n        {lng: 116.411689, lat: 39.914059},\r\n        {lng: 116.403641, lat: 39.914059},\r\n        {lng: 116.403641, lat: 39.921336},\r\n        {lng: 116.411689, lat: 39.921336}\r\n      ],\r\n      para: [],\r\n      filterFormFro: {\r\n        tableData: [],\r\n        totalCount: 0\r\n      },\r\n      circleShow: [\r\n        {show: false},\r\n        {show: false},\r\n        {show: false},\r\n        {show: false}\r\n      ],\r\n      polygonShow: false,\r\n      pointShow: [\r\n        {show: false},\r\n        {show: false},\r\n        {show: false},\r\n        {show: false},\r\n        {show: false},\r\n        {show: false},\r\n        {show: false},\r\n        {show: false},\r\n        {show: false},\r\n        {show: false}\r\n      ],\r\n      fenceShape: [\r\n        {lng: 0.0, lat: 0.0},\r\n        {lng: 0.0, lat: 0.0},\r\n        {lng: 0.0, lat: 0.0},\r\n        {lng: 0.0, lat: 0.0},\r\n        {lng: 0.0, lat: 0.0},\r\n        {lng: 0.0, lat: 0.0},\r\n        {lng: 0.0, lat: 0.0},\r\n        {lng: 0.0, lat: 0.0},\r\n        {lng: 0.0, lat: 0.0},\r\n        {lng: 0.0, lat: 0.0}\r\n      ],\r\n      circlePath: [\r\n        {\r\n          center: {\r\n            lng: 116.404,\r\n            lat: 39.915\r\n          },\r\n          radius: 300\r\n        },\r\n        {\r\n          center: {\r\n            lng: 116.404,\r\n            lat: 39.915\r\n          },\r\n          radius: 500\r\n        },\r\n        {\r\n          center: {\r\n            lng: 116.404,\r\n            lat: 39.915\r\n          },\r\n          radius: 500\r\n        },\r\n        {\r\n          center: {\r\n            lng: 116.404,\r\n            lat: 39.915\r\n          },\r\n          radius: 500\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    infoWindowClose () {\r\n      this.show = false\r\n    },\r\n    infoWindowOpen () {\r\n      this.show = true\r\n    },\r\n    getLocations () {\r\n      let para = {}\r\n      api.getLocation(para).then(res => {\r\n        if (res.result === 1000) {\r\n          let data = res.content\r\n          if (data.list.length > 0) {\r\n            for (var k = 0; k < 10; k++) {\r\n              this.pointShow[k] = false\r\n            }\r\n            for (var j = 0; j < data.number; j++) {\r\n              this.pointShow[j] = true\r\n              this.users[j].username = data.list[j].user\r\n            }\r\n            for (var l = 0; l < 10; l++) {\r\n              console.log(l + ':' + this.pointShow[l])\r\n            }\r\n          }\r\n          if (data.list.length > 0) {\r\n            let num = res.content.number\r\n            for (var i = 0; i < num; i++) {\r\n              this.fenceShape[i].lng = data.list[i].longtitude\r\n              this.fenceShape[i].lat = data.list[i].latitude\r\n              console.log(this.fenceShape[i].lng)\r\n              console.log(this.fenceShape[i].lat)\r\n              console.log('num:' + num)\r\n            }\r\n          } else {\r\n            this.$message.warning('Nothing Found')\r\n          }\r\n        } else {\r\n          this.$message.error(res.resultDesp)\r\n        }\r\n      }).catch(error => {\r\n        this.loading = false\r\n        this.$message.error(error)\r\n      })\r\n    },\r\n    refresh () {\r\n      this.getLocations()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.tableWidth = document.body.scrollWidth - 259 - 20\r\n  }\r\n}\r\n",null]}